{"version":3,"file":"vendors-node_modules_react-native_Libraries_ReactNative_getNativeComponentAttributes_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js","webpack:///./node_modules/react-native/Libraries/Image/AssetSourceResolver.js","webpack:///./node_modules/react-native/Libraries/Image/AssetUtils.js","webpack:///./node_modules/react-native/Libraries/Image/resolveAssetSource.js","webpack:///./node_modules/react-native/Libraries/ReactNative/DummyUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/NativeUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/PaperUIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/UIManager.js","webpack:///./node_modules/react-native/Libraries/ReactNative/UIManagerInjection.js","webpack:///./node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js","webpack:///./node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js","webpack:///./node_modules/react-native/Libraries/StyleSheet/processColorArray.js","webpack:///./node_modules/react-native/Libraries/Utilities/Dimensions.js","webpack:///./node_modules/react-native/Libraries/Utilities/NativeDeviceInfo.js","webpack:///./node_modules/react-native/Libraries/Utilities/PixelRatio.js","webpack:///./node_modules/react-native/Libraries/Utilities/differ/pointsDiffer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format strict-local\n * @flow\n */\n\nimport type {AnyAttributeType} from '../../Renderer/shims/ReactNativeTypes';\nimport processColor from '../../StyleSheet/processColor';\nimport processTransform from '../../StyleSheet/processTransform';\nimport sizesDiffer from '../../Utilities/differ/sizesDiffer';\n\nconst colorAttributes = {process: processColor};\n\nconst ReactNativeStyleAttributes: {[string]: AnyAttributeType, ...} = {\n  /**\n   * Layout\n   */\n  alignContent: true,\n  alignItems: true,\n  alignSelf: true,\n  aspectRatio: true,\n  borderBottomWidth: true,\n  borderEndWidth: true,\n  borderLeftWidth: true,\n  borderRightWidth: true,\n  borderStartWidth: true,\n  borderTopWidth: true,\n  borderWidth: true,\n  bottom: true,\n  direction: true,\n  display: true,\n  end: true,\n  flex: true,\n  flexBasis: true,\n  flexDirection: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexWrap: true,\n  height: true,\n  justifyContent: true,\n  left: true,\n  margin: true,\n  marginBottom: true,\n  marginEnd: true,\n  marginHorizontal: true,\n  marginLeft: true,\n  marginRight: true,\n  marginStart: true,\n  marginTop: true,\n  marginVertical: true,\n  maxHeight: true,\n  maxWidth: true,\n  minHeight: true,\n  minWidth: true,\n  overflow: true,\n  padding: true,\n  paddingBottom: true,\n  paddingEnd: true,\n  paddingHorizontal: true,\n  paddingLeft: true,\n  paddingRight: true,\n  paddingStart: true,\n  paddingTop: true,\n  paddingVertical: true,\n  position: true,\n  right: true,\n  start: true,\n  top: true,\n  width: true,\n  zIndex: true,\n\n  /**\n   * Shadow\n   */\n  elevation: true,\n  shadowColor: colorAttributes,\n  shadowOffset: {diff: sizesDiffer},\n  shadowOpacity: true,\n  shadowRadius: true,\n\n  /**\n   * Transform\n   */\n  decomposedMatrix: true, // @deprecated\n  rotation: true, // @deprecated\n  scaleX: true, // @deprecated\n  scaleY: true, // @deprecated\n  transform: {process: processTransform},\n  transformMatrix: true, // @deprecated\n  translateX: true, // @deprecated\n  translateY: true, // @deprecated\n\n  /**\n   * View\n   */\n  backfaceVisibility: true,\n  backgroundColor: colorAttributes,\n  borderBottomColor: colorAttributes,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderColor: colorAttributes,\n  borderEndColor: colorAttributes,\n  borderLeftColor: colorAttributes,\n  borderRadius: true,\n  borderRightColor: colorAttributes,\n  borderStartColor: colorAttributes,\n  borderStyle: true,\n  borderTopColor: colorAttributes,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  opacity: true,\n\n  /**\n   * Text\n   */\n  color: colorAttributes,\n  fontFamily: true,\n  fontSize: true,\n  fontStyle: true,\n  fontVariant: true,\n  fontWeight: true,\n  includeFontPadding: true,\n  letterSpacing: true,\n  lineHeight: true,\n  textAlign: true,\n  textAlignVertical: true,\n  textDecorationColor: colorAttributes,\n  textDecorationLine: true,\n  textDecorationStyle: true,\n  textShadowColor: colorAttributes,\n  textShadowOffset: true,\n  textShadowRadius: true,\n  textTransform: true,\n  writingDirection: true,\n\n  /**\n   * Image\n   */\n  overlayColor: colorAttributes,\n  resizeMode: true,\n  tintColor: colorAttributes,\n};\n\nmodule.exports = ReactNativeStyleAttributes;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nexport type ResolvedAssetSource = {|\n  +__packager_asset: boolean,\n  +width: ?number,\n  +height: ?number,\n  +uri: string,\n  +scale: number,\n|};\n\nimport type {PackagerAsset} from '@react-native/assets/registry';\n\nconst PixelRatio = require('../Utilities/PixelRatio');\nconst {pickScale} = require('./AssetUtils');\nconst Platform = require('../Utilities/Platform');\n\nconst invariant = require('invariant');\n\nconst {\n  getAndroidResourceFolderName,\n  getAndroidResourceIdentifier,\n  getBasePath,\n} = require('@react-native/assets/path-support');\n\n/**\n * Returns a path like 'assets/AwesomeModule/icon@2x.png'\n */\nfunction getScaledAssetPath(asset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\n/**\n * Returns a path like 'drawable-mdpi/icon.png'\n */\nfunction getAssetPathInDrawableFolder(asset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const drawbleFolder = getAndroidResourceFolderName(asset, scale);\n  const fileName = getAndroidResourceIdentifier(asset);\n  return drawbleFolder + '/' + fileName + '.' + asset.type;\n}\n\nclass AssetSourceResolver {\n  serverUrl: ?string;\n  // where the jsbundle is being run from\n  jsbundleUrl: ?string;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(serverUrl: ?string, jsbundleUrl: ?string, asset: PackagerAsset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    if (Platform.OS === 'android') {\n      return this.isLoadedFromFileSystem()\n        ? this.drawableFolderInBundle()\n        : this.resourceIdentifierWithoutScale();\n    } else {\n      return this.scaledAssetURLNearBundle();\n    }\n  }\n\n  /**\n   * Returns an absolute URL which can be used to fetch the asset\n   * from the devserver\n   */\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash,\n    );\n  }\n\n  /**\n   * Resolves to just the scaled asset filename\n   * E.g. 'assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * Resolves to where the bundle is running from, with a scaled asset filename\n   * E.g. 'file:///sdcard/bundle/assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(\n      // Assets can have relative paths outside of the project root.\n      // When bundling them we replace `../` with `_` to make sure they\n      // don't end up outside of the expected assets directory.\n      path + getScaledAssetPath(this.asset).replace(/\\.\\.\\//g, '_'),\n    );\n  }\n\n  /**\n   * The default location of assets bundled with the app, located by\n   * resource identifier\n   * The Android resource system picks the correct scale.\n   * E.g. 'assets_awesomemodule_icon'\n   */\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    invariant(\n      Platform.OS === 'android',\n      'resource identifiers work on Android',\n    );\n    return this.fromSource(getAndroidResourceIdentifier(this.asset));\n  }\n\n  /**\n   * If the jsbundle is running from a sideload location, this resolves assets\n   * relative to its location\n   * E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'\n   */\n  drawableFolderInBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale: (scales: Array<number>, deviceScale?: number) => number =\n    pickScale;\n}\n\nmodule.exports = AssetSourceResolver;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport PixelRatio from '../Utilities/PixelRatio';\n\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\n\nexport function pickScale(scales: Array<number>, deviceScale?: number): number {\n  if (deviceScale == null) {\n    deviceScale = PixelRatio.get();\n  }\n  // Packager guarantees that `scales` array is sorted\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= deviceScale) {\n      return scales[i];\n    }\n  }\n\n  // If nothing matches, device scale is larger than any available\n  // scales, so we return the biggest one. Unless the array is empty,\n  // in which case we default to 1\n  return scales[scales.length - 1] || 1;\n}\n\nexport function setUrlCacheBreaker(appendage: string) {\n  cacheBreaker = appendage;\n}\n\nexport function getUrlCacheBreaker(): string {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn(\n        'AssetUtils.getUrlCacheBreaker: Cache breaker value is unset',\n      );\n    }\n    return '';\n  }\n  return cacheBreaker;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n// Resolves an asset into a `source` for `Image`.\n\n'use strict';\n\nconst AssetRegistry = require('@react-native/assets/registry');\nconst AssetSourceResolver = require('./AssetSourceResolver');\nconst {pickScale} = require('./AssetUtils');\n\nimport type {ResolvedAssetSource} from './AssetSourceResolver';\n\nlet _customSourceTransformer, _serverURL, _scriptURL;\n\nlet _sourceCodeScriptURL: ?string;\nfunction getSourceCodeScriptURL(): ?string {\n  if (_sourceCodeScriptURL) {\n    return _sourceCodeScriptURL;\n  }\n\n  let sourceCode =\n    global.nativeExtensions && global.nativeExtensions.SourceCode;\n  if (!sourceCode) {\n    sourceCode = require('../NativeModules/specs/NativeSourceCode').default;\n  }\n  _sourceCodeScriptURL = sourceCode.getConstants().scriptURL;\n  return _sourceCodeScriptURL;\n}\n\nfunction getDevServerURL(): ?string {\n  if (_serverURL === undefined) {\n    const sourceCodeScriptURL = getSourceCodeScriptURL();\n    const match =\n      sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\\/\\/.*?\\//);\n    if (match) {\n      // jsBundle was loaded from network\n      _serverURL = match[0];\n    } else {\n      // jsBundle was loaded from file\n      _serverURL = null;\n    }\n  }\n  return _serverURL;\n}\n\nfunction _coerceLocalScriptURL(scriptURL: ?string): ?string {\n  if (scriptURL) {\n    if (scriptURL.startsWith('assets://')) {\n      // android: running from within assets, no offline path to use\n      return null;\n    }\n    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);\n    if (!scriptURL.includes('://')) {\n      // Add file protocol in case we have an absolute file path and not a URL.\n      // This shouldn't really be necessary. scriptURL should be a URL.\n      scriptURL = 'file://' + scriptURL;\n    }\n  }\n  return scriptURL;\n}\n\nfunction getScriptURL(): ?string {\n  if (_scriptURL === undefined) {\n    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());\n  }\n  return _scriptURL;\n}\n\nfunction setCustomSourceTransformer(\n  transformer: (resolver: AssetSourceResolver) => ResolvedAssetSource,\n): void {\n  _customSourceTransformer = transformer;\n}\n\n/**\n * `source` is either a number (opaque type returned by require('./foo.png'))\n * or an `ImageSource` like { uri: '<http location || file path>' }\n */\nfunction resolveAssetSource(source: any): ?ResolvedAssetSource {\n  if (typeof source === 'object') {\n    return source;\n  }\n\n  const asset = AssetRegistry.getAssetByID(source);\n  if (!asset) {\n    return null;\n  }\n\n  const resolver = new AssetSourceResolver(\n    getDevServerURL(),\n    getScriptURL(),\n    asset,\n  );\n  if (_customSourceTransformer) {\n    return _customSourceTransformer(resolver);\n  }\n  return resolver.defaultAsset();\n}\n\nmodule.exports = resolveAssetSource;\nmodule.exports.pickScale = pickScale;\nmodule.exports.setCustomSourceTransformer = setCustomSourceTransformer;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\nimport {unstable_hasComponent} from 'react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable';\n\nmodule.exports = {\n  getViewManagerConfig: (viewManagerName: string): mixed => {\n    console.warn(\n      'getViewManagerConfig is unavailable in Bridgeless, use hasViewManagerConfig instead. viewManagerName: ' +\n        viewManagerName,\n    );\n    if (viewManagerName === 'RCTVirtualText') {\n      return {};\n    }\n    return null;\n  },\n  hasViewManagerConfig: (viewManagerName: string): boolean => {\n    const staticViewConfigsEnabled = global.__fbStaticViewConfig === true;\n    if (staticViewConfigsEnabled) {\n      return unstable_hasComponent(viewManagerName);\n    } else {\n      return (\n        viewManagerName === 'RCTVirtualText' ||\n        viewManagerName === 'RCTShimmeringView'\n      );\n    }\n  },\n  getConstants: (): {...} => ({}),\n  getConstantsForViewManager: (viewManagerName: string) => {},\n  getDefaultEventTypes: (): Array<$FlowFixMe> => [],\n  lazilyLoadView: (name: string) => {},\n  createView: (\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => {},\n  updateView: (reactTag: number, viewName: string, props: Object) => {},\n  focus: (reactTag: ?number) => {},\n  blur: (reactTag: ?number) => {},\n  findSubviewIn: (\n    reactTag: ?number,\n    point: Array<number>,\n    callback: (\n      nativeViewTag: number,\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => {},\n  dispatchViewManagerCommand: (\n    reactTag: ?number,\n    commandID: number,\n    commandArgs: ?Array<string | number | boolean>,\n  ) => {},\n  measure: (\n    reactTag: ?number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      pageX: number,\n      pageY: number,\n    ) => void,\n  ) => {},\n  measureInWindow: (\n    reactTag: ?number,\n    callback: (x: number, y: number, width: number, height: number) => void,\n  ) => {},\n  viewIsDescendantOf: (\n    reactTag: ?number,\n    ancestorReactTag: ?number,\n    callback: (result: Array<boolean>) => void,\n  ) => {},\n  measureLayout: (\n    reactTag: ?number,\n    ancestorReactTag: ?number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => {},\n  measureLayoutRelativeToParent: (\n    reactTag: ?number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => {},\n  setJSResponder: (reactTag: ?number, blockNativeResponder: boolean) => {},\n  clearJSResponder: () => {},\n  configureNextLayoutAnimation: (\n    config: Object,\n    callback: () => void,\n    errorCallback: (error: Object) => void,\n  ) => {},\n  removeSubviewsFromContainerWithID: (containerID: number) => {},\n  replaceExistingNonRootView: (reactTag: ?number, newReactTag: ?number) => {},\n  setChildren: (containerTag: ?number, reactTags: Array<number>) => {},\n  manageChildren: (\n    containerTag: ?number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => {},\n\n  // Android only\n  setLayoutAnimationEnabledExperimental: (enabled: boolean) => {},\n  sendAccessibilityEvent: (reactTag: ?number, eventType: number) => {},\n  showPopupMenu: (\n    reactTag: ?number,\n    items: Array<string>,\n    error: (error: Object) => void,\n    success: (event: string, selected?: number) => void,\n  ) => {},\n  dismissPopupMenu: () => {},\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {RootTag} from '../TurboModule/RCTExport';\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => Object;\n  +getConstantsForViewManager: (viewManagerName: string) => Object;\n  +getDefaultEventTypes: () => Array<string>;\n  +lazilyLoadView: (name: string) => Object; // revisit return\n  +createView: (\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => void;\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\n  +focus: (reactTag: ?number) => void;\n  +blur: (reactTag: ?number) => void;\n  +findSubviewIn: (\n    reactTag: ?number,\n    point: Array<number>,\n    callback: (\n      nativeViewTag: number,\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +dispatchViewManagerCommand: (\n    reactTag: ?number,\n    commandID: number,\n    commandArgs: ?Array<any>,\n  ) => void;\n  +measure: (\n    reactTag: ?number,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      pageX: number,\n      pageY: number,\n    ) => void,\n  ) => void;\n  +measureInWindow: (\n    reactTag: ?number,\n    callback: (x: number, y: number, width: number, height: number) => void,\n  ) => void;\n  +viewIsDescendantOf: (\n    reactTag: ?number,\n    ancestorReactTag: ?number,\n    callback: (result: Array<boolean>) => void,\n  ) => void;\n  +measureLayout: (\n    reactTag: ?number,\n    ancestorReactTag: ?number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +measureLayoutRelativeToParent: (\n    reactTag: ?number,\n    errorCallback: (error: Object) => void,\n    callback: (\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n    ) => void,\n  ) => void;\n  +setJSResponder: (reactTag: ?number, blockNativeResponder: boolean) => void;\n  +clearJSResponder: () => void;\n  +configureNextLayoutAnimation: (\n    config: Object,\n    callback: () => void, // check what is returned here\n    errorCallback: (error: Object) => void,\n  ) => void;\n  +removeSubviewsFromContainerWithID: (containerID: number) => void;\n  +replaceExistingNonRootView: (\n    reactTag: ?number,\n    newReactTag: ?number,\n  ) => void;\n  +setChildren: (containerTag: ?number, reactTags: Array<number>) => void;\n  +manageChildren: (\n    containerTag: ?number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => void;\n\n  // Android only\n  +setLayoutAnimationEnabledExperimental: (enabled: boolean) => void;\n  +sendAccessibilityEvent: (reactTag: ?number, eventType: number) => void;\n  +showPopupMenu: (\n    reactTag: ?number,\n    items: Array<string>,\n    error: (error: Object) => void,\n    success: (event: string, selected?: number) => void,\n  ) => void;\n  +dismissPopupMenu: () => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('UIManager'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\nconst Platform = require('../Utilities/Platform');\nconst UIManagerProperties = require('./UIManagerProperties');\n\nconst defineLazyObjectProperty = require('../Utilities/defineLazyObjectProperty');\n\nimport NativeUIManager from './NativeUIManager';\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\n\nconst viewManagerConfigs = {};\n\nconst triedLoadingConfig = new Set();\n\nlet NativeUIManagerConstants = {};\nlet isNativeUIManagerConstantsSet = false;\nfunction getConstants(): Object {\n  if (!isNativeUIManagerConstantsSet) {\n    NativeUIManagerConstants = NativeUIManager.getConstants();\n    isNativeUIManagerConstantsSet = true;\n  }\n  return NativeUIManagerConstants;\n}\n\nfunction getViewManagerConfig(viewManagerName: string): any {\n  if (\n    viewManagerConfigs[viewManagerName] === undefined &&\n    global.nativeCallSyncHook && // If we're in the Chrome Debugger, let's not even try calling the sync method\n    NativeUIManager.getConstantsForViewManager\n  ) {\n    try {\n      viewManagerConfigs[viewManagerName] =\n        NativeUIManager.getConstantsForViewManager(viewManagerName);\n    } catch (e) {\n      console.error(\n        \"NativeUIManager.getConstantsForViewManager('\" +\n          viewManagerName +\n          \"') threw an exception.\",\n        e,\n      );\n      viewManagerConfigs[viewManagerName] = null;\n    }\n  }\n\n  const config = viewManagerConfigs[viewManagerName];\n  if (config) {\n    return config;\n  }\n\n  // If we're in the Chrome Debugger, let's not even try calling the sync\n  // method.\n  if (!global.nativeCallSyncHook) {\n    return config;\n  }\n\n  if (\n    NativeUIManager.lazilyLoadView &&\n    !triedLoadingConfig.has(viewManagerName)\n  ) {\n    const result = NativeUIManager.lazilyLoadView(viewManagerName);\n    triedLoadingConfig.add(viewManagerName);\n    if (result != null && result.viewConfig != null) {\n      getConstants()[viewManagerName] = result.viewConfig;\n      lazifyViewManagerConfig(viewManagerName);\n    }\n  }\n\n  return viewManagerConfigs[viewManagerName];\n}\n\n/* $FlowFixMe[cannot-spread-interface] (>=0.123.0 site=react_native_fb) This\n * comment suppresses an error found when Flow v0.123.0 was deployed. To see\n * the error, delete this comment and run Flow. */\nconst UIManagerJS = {\n  ...NativeUIManager,\n  createView(\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ): void {\n    if (Platform.OS === 'ios' && viewManagerConfigs[viewName] === undefined) {\n      // This is necessary to force the initialization of native viewManager\n      // classes in iOS when using static ViewConfigs\n      getViewManagerConfig(viewName);\n    }\n\n    NativeUIManager.createView(reactTag, viewName, rootTag, props);\n  },\n  getConstants(): Object {\n    return getConstants();\n  },\n  getViewManagerConfig(viewManagerName: string): any {\n    return getViewManagerConfig(viewManagerName);\n  },\n  hasViewManagerConfig(viewManagerName: string): boolean {\n    return getViewManagerConfig(viewManagerName) != null;\n  },\n};\n\n// TODO (T45220498): Remove this.\n// 3rd party libs may be calling `NativeModules.UIManager.getViewManagerConfig()`\n// instead of `UIManager.getViewManagerConfig()` off UIManager.js.\n// This is a workaround for now.\n// $FlowFixMe[prop-missing]\nNativeUIManager.getViewManagerConfig = UIManagerJS.getViewManagerConfig;\n\nfunction lazifyViewManagerConfig(viewName) {\n  const viewConfig = getConstants()[viewName];\n  viewManagerConfigs[viewName] = viewConfig;\n  if (viewConfig.Manager) {\n    defineLazyObjectProperty(viewConfig, 'Constants', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const constants = {};\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value !== 'function') {\n              constants[key] = value;\n            }\n          });\n        return constants;\n      },\n    });\n    defineLazyObjectProperty(viewConfig, 'Commands', {\n      get: () => {\n        const viewManager = NativeModules[viewConfig.Manager];\n        const commands = {};\n        let index = 0;\n        viewManager &&\n          Object.keys(viewManager).forEach(key => {\n            const value = viewManager[key];\n            if (typeof value === 'function') {\n              commands[key] = index++;\n            }\n          });\n        return commands;\n      },\n    });\n  }\n}\n\n/**\n * Copies the ViewManager constants and commands into UIManager. This is\n * only needed for iOS, which puts the constants in the ViewManager\n * namespace instead of UIManager, unlike Android.\n */\nif (Platform.OS === 'ios') {\n  Object.keys(getConstants()).forEach(viewName => {\n    lazifyViewManagerConfig(viewName);\n  });\n} else if (getConstants().ViewManagerNames) {\n  NativeUIManager.getConstants().ViewManagerNames.forEach(viewManagerName => {\n    defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n      get: () => NativeUIManager.getConstantsForViewManager(viewManagerName),\n    });\n  });\n}\n\nif (!global.nativeCallSyncHook) {\n  Object.keys(getConstants()).forEach(viewManagerName => {\n    if (!UIManagerProperties.includes(viewManagerName)) {\n      if (!viewManagerConfigs[viewManagerName]) {\n        viewManagerConfigs[viewManagerName] = getConstants()[viewManagerName];\n      }\n      defineLazyObjectProperty(NativeUIManager, viewManagerName, {\n        get: () => {\n          console.warn(\n            `Accessing view manager configs directly off UIManager via UIManager['${viewManagerName}'] ` +\n              `is no longer supported. Use UIManager.getViewManagerConfig('${viewManagerName}') instead.`,\n          );\n\n          return UIManagerJS.getViewManagerConfig(viewManagerName);\n        },\n      });\n    }\n  });\n}\n\nmodule.exports = UIManagerJS;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {Spec} from './NativeUIManager';\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\n\nexport interface UIManagerJSInterface extends Spec {\n  +getViewManagerConfig: (viewManagerName: string) => Object;\n  +hasViewManagerConfig: (viewManagerName: string) => boolean;\n  +createView: (\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => void;\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\n  +manageChildren: (\n    containerTag: ?number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => void;\n}\n\nconst UIManager: UIManagerJSInterface =\n  global.RN$Bridgeless === true\n    ? require('./DummyUIManager')\n    : require('./UIManagerInjection').default.unstable_UIManager ??\n      require('./PaperUIManager');\n\nmodule.exports = UIManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {UIManagerJSInterface} from './UIManager';\n\nexport default {\n  unstable_UIManager: (null: ?UIManagerJSInterface),\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\n/**\n * The list of non-ViewManager related UIManager properties.\n *\n * In an effort to improve startup performance by lazily loading view managers,\n * the interface to access view managers will change from\n * UIManager['viewManagerName'] to UIManager.getViewManagerConfig('viewManagerName').\n * By using a function call instead of a property access, the UIManager will\n * be able to initialize and load the required view manager from native\n * synchronously. All of React Native's core components have been updated to\n * use getViewManagerConfig(). For the next few releases, any usage of\n * UIManager['viewManagerName'] will result in a warning. Because React Native\n * does not support Proxy objects, a view manager access is implied if any of\n * UIManager's properties that are not one of the properties below is being\n * accessed. Once UIManager property accesses for view managers has been fully\n * deprecated, this file will also be removed.\n */\nmodule.exports = [\n  'clearJSResponder',\n  'configureNextLayoutAnimation',\n  'createView',\n  'dismissPopupMenu',\n  'dispatchViewManagerCommand',\n  'findSubviewIn',\n  'getConstantsForViewManager',\n  'getDefaultEventTypes',\n  'manageChildren',\n  'measure',\n  'measureInWindow',\n  'measureLayout',\n  'measureLayoutRelativeToParent',\n  'removeRootView',\n  'removeSubviewsFromContainerWithID',\n  'replaceExistingNonRootView',\n  'sendAccessibilityEvent',\n  'setChildren',\n  'setJSResponder',\n  'setLayoutAnimationEnabledExperimental',\n  'showPopupMenu',\n  'updateView',\n  'viewIsDescendantOf',\n  'PopupMenu',\n  'LazyViewManagersEnabled',\n  'ViewManagerNames',\n  'StyleConstants',\n  'AccessibilityEventTypes',\n  'UIView',\n  'getViewManagerConfig',\n  'hasViewManagerConfig',\n  'blur',\n  'focus',\n  'genericBubblingEventTypes',\n  'genericDirectEventTypes',\n  'lazilyLoadView',\n];\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst UIManager = require('./UIManager');\n\nconst insetsDiffer = require('../Utilities/differ/insetsDiffer');\nconst invariant = require('invariant');\nconst matricesDiffer = require('../Utilities/differ/matricesDiffer');\nconst pointsDiffer = require('../Utilities/differ/pointsDiffer');\nconst processColor = require('../StyleSheet/processColor');\nconst processColorArray = require('../StyleSheet/processColorArray');\nconst resolveAssetSource = require('../Image/resolveAssetSource');\nconst sizesDiffer = require('../Utilities/differ/sizesDiffer');\n\nfunction getNativeComponentAttributes(uiViewClassName: string): any {\n  const viewConfig = UIManager.getViewManagerConfig(uiViewClassName);\n\n  invariant(\n    viewConfig != null && viewConfig.NativeProps != null,\n    'requireNativeComponent: \"%s\" was not found in the UIManager.',\n    uiViewClassName,\n  );\n\n  // TODO: This seems like a whole lot of runtime initialization for every\n  // native component that can be either avoided or simplified.\n  let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;\n  let nativeProps = viewConfig.NativeProps;\n\n  bubblingEventTypes = bubblingEventTypes ?? {};\n  directEventTypes = directEventTypes ?? {};\n\n  while (baseModuleName) {\n    const baseModule = UIManager.getViewManagerConfig(baseModuleName);\n    if (!baseModule) {\n      baseModuleName = null;\n    } else {\n      bubblingEventTypes = {\n        ...baseModule.bubblingEventTypes,\n        ...bubblingEventTypes,\n      };\n      directEventTypes = {\n        ...baseModule.directEventTypes,\n        ...directEventTypes,\n      };\n      nativeProps = {\n        ...baseModule.NativeProps,\n        ...nativeProps,\n      };\n      baseModuleName = baseModule.baseModuleName;\n    }\n  }\n\n  const validAttributes = {};\n\n  for (const key in nativeProps) {\n    const typeName = nativeProps[key];\n    const diff = getDifferForType(typeName);\n    const process = getProcessorForType(typeName);\n\n    // If diff or process == null, omit the corresponding property from the Attribute\n    // Why:\n    //  1. Consistency with AttributeType flow type\n    //  2. Consistency with Static View Configs, which omit the null properties\n    validAttributes[key] =\n      diff == null\n        ? process == null\n          ? true\n          : {process}\n        : process == null\n        ? {diff}\n        : {diff, process};\n  }\n\n  // Unfortunately, the current setup declares style properties as top-level\n  // props. This makes it so we allow style properties in the `style` prop.\n  // TODO: Move style properties into a `style` prop and disallow them as\n  // top-level props on the native side.\n  validAttributes.style = ReactNativeStyleAttributes;\n\n  Object.assign(viewConfig, {\n    uiViewClassName,\n    validAttributes,\n    bubblingEventTypes,\n    directEventTypes,\n  });\n\n  attachDefaultEventTypes(viewConfig);\n\n  return viewConfig;\n}\n\nfunction attachDefaultEventTypes(viewConfig: any) {\n  // This is supported on UIManager platforms (ex: Android),\n  // as lazy view managers are not implemented for all platforms.\n  // See [UIManager] for details on constants and implementations.\n  const constants = UIManager.getConstants();\n  if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {\n    // Lazy view managers enabled.\n    viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());\n  } else {\n    viewConfig.bubblingEventTypes = merge(\n      viewConfig.bubblingEventTypes,\n      constants.genericBubblingEventTypes,\n    );\n    viewConfig.directEventTypes = merge(\n      viewConfig.directEventTypes,\n      constants.genericDirectEventTypes,\n    );\n  }\n}\n\n// TODO: Figure out how to avoid all this runtime initialization cost.\nfunction merge(destination: ?Object, source: ?Object): ?Object {\n  if (!source) {\n    return destination;\n  }\n  if (!destination) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (!source.hasOwnProperty(key)) {\n      continue;\n    }\n\n    let sourceValue = source[key];\n    if (destination.hasOwnProperty(key)) {\n      const destinationValue = destination[key];\n      if (\n        typeof sourceValue === 'object' &&\n        typeof destinationValue === 'object'\n      ) {\n        sourceValue = merge(destinationValue, sourceValue);\n      }\n    }\n    destination[key] = sourceValue;\n  }\n  return destination;\n}\n\nfunction getDifferForType(\n  typeName: string,\n): ?(prevProp: any, nextProp: any) => boolean {\n  switch (typeName) {\n    // iOS Types\n    case 'CATransform3D':\n      return matricesDiffer;\n    case 'CGPoint':\n      return pointsDiffer;\n    case 'CGSize':\n      return sizesDiffer;\n    case 'UIEdgeInsets':\n      return insetsDiffer;\n    // Android Types\n    case 'Point':\n      return pointsDiffer;\n    case 'EdgeInsets':\n      return insetsDiffer;\n  }\n  return null;\n}\n\nfunction getProcessorForType(typeName: string): ?(nextProp: any) => any {\n  switch (typeName) {\n    // iOS Types\n    case 'CGColor':\n    case 'UIColor':\n      return processColor;\n    case 'CGColorArray':\n    case 'UIColorArray':\n      return processColorArray;\n    case 'CGImage':\n    case 'UIImage':\n    case 'RCTImageSource':\n      return resolveAssetSource;\n    // Android Types\n    case 'Color':\n      return processColor;\n    case 'ColorArray':\n      return processColorArray;\n    case 'ImageSource':\n      return resolveAssetSource;\n  }\n  return null;\n}\n\nmodule.exports = getNativeComponentAttributes;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorValue} from './StyleSheet';\nimport processColor, {type ProcessedColorValue} from './processColor';\n\nconst TRANSPARENT = 0; // rgba(0, 0, 0, 0)\n\nfunction processColorArray(\n  colors: ?$ReadOnlyArray<ColorValue>,\n): ?$ReadOnlyArray<ProcessedColorValue> {\n  return colors == null ? null : colors.map(processColorElement);\n}\n\nfunction processColorElement(color: ColorValue): ProcessedColorValue {\n  const value = processColor(color);\n  // For invalid colors, fallback to transparent.\n  if (value == null) {\n    console.error('Invalid value in color array:', color);\n    return TRANSPARENT;\n  }\n  return value;\n}\n\nmodule.exports = processColorArray;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport EventEmitter, {\n  type EventSubscription,\n} from '../vendor/emitter/EventEmitter';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeDeviceInfo, {\n  type DisplayMetrics,\n  type DisplayMetricsAndroid,\n  type DimensionsPayload,\n} from './NativeDeviceInfo';\nimport invariant from 'invariant';\n\nconst eventEmitter = new EventEmitter<{\n  change: [DimensionsPayload],\n}>();\nlet dimensionsInitialized = false;\nlet dimensions: DimensionsPayload;\n\nclass Dimensions {\n  /**\n   * NOTE: `useWindowDimensions` is the preferred API for React components.\n   *\n   * Initial dimensions are set before `runApplication` is called so they should\n   * be available before any other require's are run, but may be updated later.\n   *\n   * Note: Although dimensions are available immediately, they may change (e.g\n   * due to device rotation) so any rendering logic or styles that depend on\n   * these constants should try to call this function on every render, rather\n   * than caching the value (for example, using inline styles rather than\n   * setting a value in a `StyleSheet`).\n   *\n   * Example: `const {height, width} = Dimensions.get('window');`\n   *\n   * @param {string} dim Name of dimension as defined when calling `set`.\n   * @returns {DisplayMetrics? | DisplayMetricsAndroid?} Value for the dimension.\n   */\n  static get(dim: string): DisplayMetrics | DisplayMetricsAndroid {\n    invariant(dimensions[dim], 'No dimension set for key ' + dim);\n    return dimensions[dim];\n  }\n\n  /**\n   * This should only be called from native code by sending the\n   * didUpdateDimensions event.\n   *\n   * @param {DimensionsPayload} dims Simple string-keyed object of dimensions to set\n   */\n  static set(dims: $ReadOnly<DimensionsPayload>): void {\n    // We calculate the window dimensions in JS so that we don't encounter loss of\n    // precision in transferring the dimensions (which could be non-integers) over\n    // the bridge.\n    let {screen, window} = dims;\n    const {windowPhysicalPixels} = dims;\n    if (windowPhysicalPixels) {\n      window = {\n        width: windowPhysicalPixels.width / windowPhysicalPixels.scale,\n        height: windowPhysicalPixels.height / windowPhysicalPixels.scale,\n        scale: windowPhysicalPixels.scale,\n        fontScale: windowPhysicalPixels.fontScale,\n      };\n    }\n    const {screenPhysicalPixels} = dims;\n    if (screenPhysicalPixels) {\n      screen = {\n        width: screenPhysicalPixels.width / screenPhysicalPixels.scale,\n        height: screenPhysicalPixels.height / screenPhysicalPixels.scale,\n        scale: screenPhysicalPixels.scale,\n        fontScale: screenPhysicalPixels.fontScale,\n      };\n    } else if (screen == null) {\n      screen = window;\n    }\n\n    dimensions = {window, screen};\n    if (dimensionsInitialized) {\n      // Don't fire 'change' the first time the dimensions are set.\n      eventEmitter.emit('change', dimensions);\n    } else {\n      dimensionsInitialized = true;\n    }\n  }\n\n  /**\n   * Add an event handler. Supported events:\n   *\n   * - `change`: Fires when a property within the `Dimensions` object changes. The argument\n   *   to the event handler is an object with `window` and `screen` properties whose values\n   *   are the same as the return values of `Dimensions.get('window')` and\n   *   `Dimensions.get('screen')`, respectively.\n   */\n  static addEventListener(\n    type: 'change',\n    handler: Function,\n  ): EventSubscription {\n    invariant(\n      type === 'change',\n      'Trying to subscribe to unknown event: \"%s\"',\n      type,\n    );\n    return eventEmitter.addListener(type, handler);\n  }\n\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addEventListener`.\n   */\n  static removeEventListener(type: 'change', handler: Function) {\n    invariant(\n      type === 'change',\n      'Trying to remove listener for unknown event: \"%s\"',\n      type,\n    );\n    // NOTE: This will report a deprecation notice via `console.error`.\n    eventEmitter.removeListener(type, handler);\n  }\n}\n\nlet initialDims: ?$ReadOnly<DimensionsPayload> =\n  global.nativeExtensions &&\n  global.nativeExtensions.DeviceInfo &&\n  global.nativeExtensions.DeviceInfo.Dimensions;\nif (!initialDims) {\n  // Subscribe before calling getConstants to make sure we don't miss any updates in between.\n  RCTDeviceEventEmitter.addListener(\n    'didUpdateDimensions',\n    (update: DimensionsPayload) => {\n      Dimensions.set(update);\n    },\n  );\n  initialDims = NativeDeviceInfo.getConstants().Dimensions;\n}\n\nDimensions.set(initialDims);\n\nmodule.exports = Dimensions;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport type DisplayMetricsAndroid = {|\n  width: number,\n  height: number,\n  scale: number,\n  fontScale: number,\n  densityDpi: number,\n|};\n\nexport type DisplayMetrics = {|\n  width: number,\n  height: number,\n  scale: number,\n  fontScale: number,\n|};\n\nexport type DimensionsPayload = {|\n  window?: DisplayMetrics,\n  screen?: DisplayMetrics,\n  windowPhysicalPixels?: DisplayMetricsAndroid,\n  screenPhysicalPixels?: DisplayMetricsAndroid,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +Dimensions: DimensionsPayload,\n    +isIPhoneX_deprecated?: boolean,\n  |};\n}\n\nconst NativeModule: Spec = TurboModuleRegistry.getEnforcing<Spec>('DeviceInfo');\nlet constants = null;\n\nconst NativeDeviceInfo = {\n  getConstants(): {|\n    +Dimensions: DimensionsPayload,\n    +isIPhoneX_deprecated?: boolean,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n};\n\nexport default NativeDeviceInfo;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Dimensions = require('./Dimensions');\n\n/**\n * PixelRatio class gives access to the device pixel density.\n *\n * ## Fetching a correctly sized image\n *\n * You should get a higher resolution image if you are on a high pixel density\n * device. A good rule of thumb is to multiply the size of the image you display\n * by the pixel ratio.\n *\n * ```\n * var image = getImage({\n *   width: PixelRatio.getPixelSizeForLayoutSize(200),\n *   height: PixelRatio.getPixelSizeForLayoutSize(100),\n * });\n * <Image source={image} style={{width: 200, height: 100}} />\n * ```\n *\n * ## Pixel grid snapping\n *\n * In iOS, you can specify positions and dimensions for elements with arbitrary\n * precision, for example 29.674825. But, ultimately the physical display only\n * have a fixed number of pixels, for example 640×960 for iPhone 4 or 750×1334\n * for iPhone 6. iOS tries to be as faithful as possible to the user value by\n * spreading one original pixel into multiple ones to trick the eye. The\n * downside of this technique is that it makes the resulting element look\n * blurry.\n *\n * In practice, we found out that developers do not want this feature and they\n * have to work around it by doing manual rounding in order to avoid having\n * blurry elements. In React Native, we are rounding all the pixels\n * automatically.\n *\n * We have to be careful when to do this rounding. You never want to work with\n * rounded and unrounded values at the same time as you're going to accumulate\n * rounding errors. Having even one rounding error is deadly because a one\n * pixel border may vanish or be twice as big.\n *\n * In React Native, everything in JavaScript and within the layout engine works\n * with arbitrary precision numbers. It's only when we set the position and\n * dimensions of the native element on the main thread that we round. Also,\n * rounding is done relative to the root rather than the parent, again to avoid\n * accumulating rounding errors.\n *\n */\nclass PixelRatio {\n  /**\n   * Returns the device pixel density. Some examples:\n   *\n   *   - PixelRatio.get() === 1\n   *     - mdpi Android devices (160 dpi)\n   *   - PixelRatio.get() === 1.5\n   *     - hdpi Android devices (240 dpi)\n   *   - PixelRatio.get() === 2\n   *     - iPhone 4, 4S\n   *     - iPhone 5, 5c, 5s\n   *     - iPhone 6\n   *     - iPhone 7\n   *     - iPhone 8\n   *     - iPhone SE\n   *     - xhdpi Android devices (320 dpi)\n   *   - PixelRatio.get() === 3\n   *     - iPhone 6 Plus\n   *     - iPhone 7 Plus\n   *     - iPhone 8 Plus\n   *     - iPhone X\n   *     - xxhdpi Android devices (480 dpi)\n   *   - PixelRatio.get() === 3.5\n   *     - Nexus 6\n   */\n  static get(): number {\n    return Dimensions.get('window').scale;\n  }\n\n  /**\n   * Returns the scaling factor for font sizes. This is the ratio that is used to calculate the\n   * absolute font size, so any elements that heavily depend on that should use this to do\n   * calculations.\n   *\n   * If a font scale is not set, this returns the device pixel ratio.\n   *\n   * This reflects the user preference set in:\n   *  - Settings > Display > Font size on Android,\n   *  - Settings > Display & Brightness > Text Size on iOS.\n   */\n  static getFontScale(): number {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   *\n   * Guaranteed to return an integer number.\n   */\n  static getPixelSizeForLayoutSize(layoutSize: number): number {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n  static roundToNearestPixel(layoutSize: number): number {\n    const ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  }\n\n  // No-op for iOS, but used on the web. Should not be documented.\n  static startDetecting() {}\n}\n\nmodule.exports = PixelRatio;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\ntype Point = {\n  x: ?number,\n  y: ?number,\n  ...\n};\n\nconst dummyPoint = {x: undefined, y: undefined};\n\nconst pointsDiffer = function (one: ?Point, two: ?Point): boolean {\n  one = one || dummyPoint;\n  two = two || dummyPoint;\n  return one !== two && (one.x !== two.x || one.y !== two.y);\n};\n\nmodule.exports = pointsDiffer;\n"],"names":["_processColor","_interopRequireDefault","require","_processTransform","_sizesDiffer","colorAttributes","process","processColor","ReactNativeStyleAttributes","alignContent","alignItems","alignSelf","aspectRatio","borderBottomWidth","borderEndWidth","borderLeftWidth","borderRightWidth","borderStartWidth","borderTopWidth","borderWidth","bottom","direction","display","end","flex","flexBasis","flexDirection","flexGrow","flexShrink","flexWrap","height","justifyContent","left","margin","marginBottom","marginEnd","marginHorizontal","marginLeft","marginRight","marginStart","marginTop","marginVertical","maxHeight","maxWidth","minHeight","minWidth","overflow","padding","paddingBottom","paddingEnd","paddingHorizontal","paddingLeft","paddingRight","paddingStart","paddingTop","paddingVertical","position","right","start","top","width","zIndex","elevation","shadowColor","shadowOffset","diff","sizesDiffer","shadowOpacity","shadowRadius","decomposedMatrix","rotation","scaleX","scaleY","transform","processTransform","transformMatrix","translateX","translateY","backfaceVisibility","backgroundColor","borderBottomColor","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderColor","borderEndColor","borderLeftColor","borderRadius","borderRightColor","borderStartColor","borderStyle","borderTopColor","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","opacity","color","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","includeFontPadding","letterSpacing","lineHeight","textAlign","textAlignVertical","textDecorationColor","textDecorationLine","textDecorationStyle","textShadowColor","textShadowOffset","textShadowRadius","textTransform","writingDirection","overlayColor","resizeMode","tintColor","module","exports","_classCallCheck2","_createClass2","PixelRatio","pickScale","Platform","invariant","_require2","getAndroidResourceFolderName","getAndroidResourceIdentifier","getBasePath","getScaledAssetPath","asset","scale","scales","get","scaleSuffix","name","type","AssetSourceResolver","default","serverUrl","jsbundleUrl","this","key","value","startsWith","isLoadedFromServer","assetServerURL","OS","isLoadedFromFileSystem","drawableFolderInBundle","resourceIdentifierWithoutScale","scaledAssetURLNearBundle","fromSource","hash","path","replace","source","__packager_asset","uri","cacheBreaker","warnIfCacheBreakerUnset","console","warn","deviceScale","i","length","appendage","_PixelRatio","_customSourceTransformer","_serverURL","_scriptURL","_sourceCodeScriptURL","AssetRegistry","getSourceCodeScriptURL","sourceCode","global","nativeExtensions","SourceCode","getConstants","scriptURL","getAssetByID","resolver","undefined","sourceCodeScriptURL","match","getDevServerURL","substring","lastIndexOf","includes","_coerceLocalScriptURL","defaultAsset","setCustomSourceTransformer","transformer","_NativeComponentRegistryUnstable","getViewManagerConfig","viewManagerName","hasViewManagerConfig","__fbStaticViewConfig","unstable_hasComponent","getConstantsForViewManager","getDefaultEventTypes","lazilyLoadView","createView","reactTag","viewName","rootTag","props","updateView","focus","blur","findSubviewIn","point","callback","dispatchViewManagerCommand","commandID","commandArgs","measure","measureInWindow","viewIsDescendantOf","ancestorReactTag","measureLayout","errorCallback","measureLayoutRelativeToParent","setJSResponder","blockNativeResponder","clearJSResponder","configureNextLayoutAnimation","config","removeSubviewsFromContainerWithID","containerID","replaceExistingNonRootView","newReactTag","setChildren","containerTag","reactTags","manageChildren","moveFromIndices","moveToIndices","addChildReactTags","addAtIndices","removeAtIndices","setLayoutAnimationEnabledExperimental","enabled","sendAccessibilityEvent","eventType","showPopupMenu","items","error","success","dismissPopupMenu","TurboModuleRegistry","e","r","__esModule","t","_getRequireWildcardCache","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","set","_interopRequireWildcard","WeakMap","getEnforcing","_NativeUIManager","NativeModules","UIManagerProperties","defineLazyObjectProperty","viewManagerConfigs","triedLoadingConfig","Set","NativeUIManagerConstants","isNativeUIManagerConstantsSet","NativeUIManager","nativeCallSyncHook","result","add","viewConfig","lazifyViewManagerConfig","UIManagerJS","_extends2","Manager","viewManager","constants","keys","forEach","commands","index","ViewManagerNames","UIManager","RN$Bridgeless","_require$default$unst","unstable_UIManager","insetsDiffer","matricesDiffer","pointsDiffer","processColorArray","resolveAssetSource","merge","destination","sourceValue","destinationValue","getDifferForType","typeName","getProcessorForType","uiViewClassName","_bubblingEventTypes","_directEventTypes","NativeProps","baseModuleName","bubblingEventTypes","directEventTypes","nativeProps","baseModule","validAttributes","style","LazyViewManagersEnabled","genericBubblingEventTypes","genericDirectEventTypes","attachDefaultEventTypes","processColorElement","colors","map","dimensions","_EventEmitter","_RCTDeviceEventEmitter","_NativeDeviceInfo","_invariant","eventEmitter","EventEmitter","dimensionsInitialized","Dimensions","dim","dims","screen","window","windowPhysicalPixels","fontScale","screenPhysicalPixels","emit","handler","addListener","removeListener","initialDims","DeviceInfo","RCTDeviceEventEmitter","update","NativeDeviceInfo","NativeModule","layoutSize","Math","round","ratio","dummyPoint","x","y","one","two"],"sourceRoot":""}