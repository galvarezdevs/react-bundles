{"version":3,"file":"node_modules_react-native_Libraries_Utilities_codegenNativeComponent_js-node_modules_babel_ru-983d01.chunk.bundle","mappings":"6QAYA,IAAMA,EAAkCC,EAAQ,2FAC1CC,EAA+BD,EAAQ,qFAkB7CE,EAAOC,QALwB,SAAIC,GAAuB,OACtDL,EAAgCK,GAAiB,kBACjDH,EAA6BG,EAAgB,GAC9C,C,yHCdH,IAGOC,EAHPL,EAAA,mKAGmBM,8BAAZD,SAiBPH,EAAOC,QAPiC,SACtCI,EACAC,GAEA,OAAOH,EAASE,EAAMC,EACxB,C,0OCrBA,IAAAC,EAAAC,EAAAV,EAAA,gFAEAW,EAAAD,EAAAV,EAAA,mEA6CCG,EAAAA,QAjCD,SACES,EACAC,GAEA,IAAIC,EACFD,GAAyC,MAA9BA,EAAQE,mBACfF,EAAQE,mBACRH,EAEN,GAAe,MAAXC,GAA2D,MAAxCA,EAAQG,6BAC7B,GAAIC,EAAAA,QAAUC,qBAAqBN,GACjCE,EAAqBF,MAChB,CAKC,IAADO,EALA,GACmC,MAAxCN,EAAQG,+BACRC,EAAAA,QAAUC,qBAAqBL,EAAQG,8BAIvC,MAAM,IAAII,MAAM,8CACgCR,EAAa,QACrB,OADqBO,EACzDN,EAAQG,8BAA4BG,EAAI,cAJ5CL,EAAqBD,EAAQG,4BAO/B,CAOF,OAAQ,EAAAK,EAAAA,SACNP,EAEJ,C,iEC3DA,SAASQ,IACP,OAAOpB,EAAOC,QAAUmB,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAClF,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAIF,UAAUD,GAClB,IAAK,IAAII,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOL,EAAEK,GAAKD,EAAEC,GAC/D,CACA,OAAOL,CACT,EAAGxB,EAAOC,QAAQ+B,YAAa,EAAMhC,EAAOC,QAAiB,QAAID,EAAOC,QAASmB,EAASa,MAAM,KAAMP,UACxG,CACA1B,EAAOC,QAAUmB,EAAUpB,EAAOC,QAAQ+B,YAAa,EAAMhC,EAAOC,QAAiB,QAAID,EAAOC,O,+ECJhGD,EAAOC,QALP,SAAgCwB,GAC9B,OAAOA,GAAKA,EAAEO,WAAaP,EAAI,CAC7B,QAAWA,EAEf,EACyCzB,EAAOC,QAAQ+B,YAAa,EAAMhC,EAAOC,QAAiB,QAAID,EAAOC,O","sources":["webpack:///./node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js","webpack:///./node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass');\nconst getNativeComponentAttributes = require('./getNativeComponentAttributes');\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\n\n/**\n * Creates values that can be used like React components which represent native\n * view managers. You should create JavaScript modules that wrap these values so\n * that the results are memoized. Example:\n *\n *   const View = requireNativeComponent('RCTView');\n *\n */\n\nconst requireNativeComponent = <T>(uiViewClassName: string): HostComponent<T> =>\n  ((createReactNativeComponentClass(uiViewClassName, () =>\n    getNativeComponentAttributes(uiViewClassName),\n  ): any): HostComponent<T>);\n\nmodule.exports = requireNativeComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @flow strict-local\n * @generated SignedSource<<4f1549884fbe8fc2aea495692e3f665d>>\n *\n * This file was sync'd from the facebook/react repository.\n */\n\n'use strict';\n\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {type ViewConfig} from './ReactNativeTypes';\n\nconst {register} = ReactNativeViewConfigRegistry;\n\n/**\n * Creates a renderable ReactNative host component.\n * Use this method for view configs that are loaded from UIManager.\n * Use createReactNativeComponentClass() for view configs defined within JavaScript.\n *\n * @param {string} config iOS View configuration.\n * @private\n */\nconst createReactNativeComponentClass = function(\n  name: string,\n  callback: () => ViewConfig,\n): string {\n  return register(name, callback);\n};\n\nmodule.exports = createReactNativeComponentClass;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// TODO: move this file to shims/ReactNative (requires React update and sync)\n\nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport type {HostComponent} from '../../Libraries/Renderer/shims/ReactNativeTypes';\nimport UIManager from '../ReactNative/UIManager';\n\n// TODO: import from CodegenSchema once workspaces are enabled\ntype Options = $ReadOnly<{|\n  interfaceOnly?: boolean,\n  paperComponentName?: string,\n  paperComponentNameDeprecated?: string,\n  excludedPlatforms?: $ReadOnlyArray<'iOS' | 'android'>,\n|}>;\n\nexport type NativeComponentType<T> = HostComponent<T>;\n\nfunction codegenNativeComponent<Props>(\n  componentName: string,\n  options?: Options,\n): NativeComponentType<Props> {\n  let componentNameInUse =\n    options && options.paperComponentName != null\n      ? options.paperComponentName\n      : componentName;\n\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.getViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (\n      options.paperComponentNameDeprecated != null &&\n      UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)\n    ) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(\n        `Failed to find native component for either ${componentName} or ${\n          options.paperComponentNameDeprecated ?? '(unknown)'\n        }`,\n      );\n    }\n  }\n\n  // If this function is run at runtime then that means the view configs were not\n  // generated with the view config babel plugin, so we need to require the native component.\n  //\n  // This will be useful during migration, but eventually this will error.\n  return (requireNativeComponent<Props>(\n    componentNameInUse,\n  ): HostComponent<Props>);\n}\n\nexport default codegenNativeComponent;\n","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["createReactNativeComponentClass","require","getNativeComponentAttributes","module","exports","uiViewClassName","register","ReactNativeViewConfigRegistry","name","callback","_requireNativeComponent","_interopRequireDefault","_UIManager","componentName","options","componentNameInUse","paperComponentName","paperComponentNameDeprecated","UIManager","getViewManagerConfig","_options$paperCompone","Error","requireNativeComponent","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","__esModule","apply"],"sourceRoot":""}