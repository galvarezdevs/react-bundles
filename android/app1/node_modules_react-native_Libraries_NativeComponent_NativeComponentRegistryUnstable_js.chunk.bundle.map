{"version":3,"file":"node_modules_react-native_Libraries_NativeComponent_NativeComponentRegistryUnstable_js.chunk.bundle","mappings":"wUAeO,SAA+BA,GACpC,IAAIC,EAAqBC,EAAsBC,IAAIH,GACnD,GAA0B,MAAtBC,EAA4B,CAC9B,IAAIG,EAAAA,EAAOC,wCAIT,KAAK,0BAA2BL,EAAI,wCAHpCC,EAAqBG,EAAAA,EAAOC,wCAAwCL,GACpEE,EAAsBI,IAAIN,EAAMC,EAIpC,CACA,OAAOA,CACT,EAnBA,IAAIC,EAA8C,IAAIK,G","sources":["webpack:///./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistryUnstable.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet componentNameToExists: Map<string, boolean> = new Map();\n\n/**\n * Unstable API. Do not use!\n *\n * This method returns if the component with name received as a parameter\n * is registed in the native platform.\n */\nexport function unstable_hasComponent(name: string): boolean {\n  let hasNativeComponent = componentNameToExists.get(name);\n  if (hasNativeComponent == null) {\n    if (global.__nativeComponentRegistry__hasComponent) {\n      hasNativeComponent = global.__nativeComponentRegistry__hasComponent(name);\n      componentNameToExists.set(name, hasNativeComponent);\n    } else {\n      throw `unstable_hasComponent('${name}'): Global function is not registered`;\n    }\n  }\n  return hasNativeComponent;\n}\n"],"names":["name","hasNativeComponent","componentNameToExists","get","global","__nativeComponentRegistry__hasComponent","set","Map"],"sourceRoot":""}