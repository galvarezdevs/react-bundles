{"version":3,"file":"vendors-node_modules_react-native_Libraries_Alert_Alert_js-node_modules_react-native_Librarie-09a491.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/Alert/Alert.js","webpack:///./node_modules/react-native/Libraries/Alert/RCTAlertManager.android.js","webpack:///./node_modules/react-native/Libraries/AppState/AppState.js","webpack:///./node_modules/react-native/Libraries/AppState/NativeAppState.js","webpack:///./node_modules/react-native/Libraries/Blob/Blob.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobManager.js","webpack:///./node_modules/react-native/Libraries/Blob/BlobRegistry.js","webpack:///./node_modules/react-native/Libraries/Blob/NativeBlobModule.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack:///./node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDevSettings.js","webpack:///./node_modules/react-native/Libraries/NativeModules/specs/NativeDialogManagerAndroid.js","webpack:///./node_modules/react-native/Libraries/Network/FormData.js","webpack:///./node_modules/react-native/Libraries/Network/NativeNetworkingAndroid.js","webpack:///./node_modules/react-native/Libraries/Network/RCTNetworking.android.js","webpack:///./node_modules/react-native/Libraries/Network/XMLHttpRequest.js","webpack:///./node_modules/react-native/Libraries/Network/convertRequestBody.js","webpack:///./node_modules/react-native/Libraries/Utilities/DevSettings.js","webpack:///./node_modules/react-native/Libraries/Utilities/GlobalPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/binaryToBase64.js","webpack:///./node_modules/react-native/Libraries/Utilities/createPerformanceLogger.js","webpack:///./node_modules/react-native/Libraries/Utilities/infoLog.js","webpack:///./node_modules/react-native/Libraries/Utilities/logError.js","webpack:///./node_modules/react-native/Libraries/WebSocket/NativeWebSocketModule.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/event-target-shim/dist/event-target-shim.js","webpack:///./node_modules/@babel/runtime/helpers/get.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/superPropBase.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport Platform from '../Utilities/Platform';\nimport type {DialogOptions} from '../NativeModules/specs/NativeDialogManagerAndroid';\nimport RCTAlertManager from './RCTAlertManager';\n\nexport type AlertType =\n  | 'default'\n  | 'plain-text'\n  | 'secure-text'\n  | 'login-password';\nexport type AlertButtonStyle = 'default' | 'cancel' | 'destructive';\nexport type Buttons = Array<{\n  text?: string,\n  onPress?: ?Function,\n  style?: AlertButtonStyle,\n  ...\n}>;\n\ntype Options = {\n  cancelable?: ?boolean,\n  onDismiss?: ?() => void,\n  ...\n};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See https://reactnative.dev/docs/alert\n */\nclass Alert {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n  ): void {\n    if (Platform.OS === 'ios') {\n      Alert.prompt(title, message, buttons, 'default');\n    } else if (Platform.OS === 'android') {\n      const NativeDialogManagerAndroid =\n        require('../NativeModules/specs/NativeDialogManagerAndroid').default;\n      if (!NativeDialogManagerAndroid) {\n        return;\n      }\n      const constants = NativeDialogManagerAndroid.getConstants();\n\n      const config: DialogOptions = {\n        title: title || '',\n        message: message || '',\n        cancelable: false,\n      };\n\n      if (options && options.cancelable) {\n        config.cancelable = options.cancelable;\n      }\n      // At most three buttons (neutral, negative, positive). Ignore rest.\n      // The text 'OK' should be probably localized. iOS Alert does that in native.\n      const defaultPositiveText = 'OK';\n      const validButtons: Buttons = buttons\n        ? buttons.slice(0, 3)\n        : [{text: defaultPositiveText}];\n      const buttonPositive = validButtons.pop();\n      const buttonNegative = validButtons.pop();\n      const buttonNeutral = validButtons.pop();\n\n      if (buttonNeutral) {\n        config.buttonNeutral = buttonNeutral.text || '';\n      }\n      if (buttonNegative) {\n        config.buttonNegative = buttonNegative.text || '';\n      }\n      if (buttonPositive) {\n        config.buttonPositive = buttonPositive.text || defaultPositiveText;\n      }\n\n      const onAction = (action, buttonKey) => {\n        if (action === constants.buttonClicked) {\n          if (buttonKey === constants.buttonNeutral) {\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (buttonKey === constants.buttonNegative) {\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (buttonKey === constants.buttonPositive) {\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === constants.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      };\n      const onError = errorMessage => console.warn(errorMessage);\n      NativeDialogManagerAndroid.showAlert(config, onError, onAction);\n    }\n  }\n\n  static prompt(\n    title: ?string,\n    message?: ?string,\n    callbackOrButtons?: ?(((text: string) => void) | Buttons),\n    type?: ?AlertType = 'plain-text',\n    defaultValue?: string,\n    keyboardType?: string,\n  ): void {\n    if (Platform.OS === 'ios') {\n      let callbacks = [];\n      const buttons = [];\n      let cancelButtonKey;\n      let destructiveButtonKey;\n      if (typeof callbackOrButtons === 'function') {\n        callbacks = [callbackOrButtons];\n      } else if (Array.isArray(callbackOrButtons)) {\n        callbackOrButtons.forEach((btn, index) => {\n          callbacks[index] = btn.onPress;\n          if (btn.style === 'cancel') {\n            cancelButtonKey = String(index);\n          } else if (btn.style === 'destructive') {\n            destructiveButtonKey = String(index);\n          }\n          if (btn.text || index < (callbackOrButtons || []).length - 1) {\n            const btnDef = {};\n            btnDef[index] = btn.text || '';\n            buttons.push(btnDef);\n          }\n        });\n      }\n\n      RCTAlertManager.alertWithArgs(\n        {\n          title: title || '',\n          message: message || undefined,\n          buttons,\n          type: type || undefined,\n          defaultValue,\n          cancelButtonKey,\n          destructiveButtonKey,\n          keyboardType,\n        },\n        (id, value) => {\n          const cb = callbacks[id];\n          cb && cb(value);\n        },\n      );\n    }\n  }\n}\n\nmodule.exports = Alert;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeDialogManagerAndroid from '../NativeModules/specs/NativeDialogManagerAndroid';\n\nfunction emptyCallback() {}\n\nmodule.exports = {\n  alertWithArgs: function (args, callback) {\n    // TODO(5998984): Polyfill it correctly with DialogManagerAndroid\n    if (!NativeDialogManagerAndroid) {\n      return;\n    }\n\n    NativeDialogManagerAndroid.showAlert(\n      args,\n      emptyCallback,\n      callback || emptyCallback,\n    );\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport logError from '../Utilities/logError';\nimport NativeAppState from './NativeAppState';\nimport Platform from '../Utilities/Platform';\n\nexport type AppStateValues = 'inactive' | 'background' | 'active';\n\ntype AppStateEventDefinitions = {\n  change: [AppStateValues],\n  memoryWarning: [],\n  blur: [],\n  focus: [],\n};\n\ntype NativeAppStateEventDefinitions = {\n  appStateDidChange: [{app_state: AppStateValues}],\n  appStateFocusChange: [boolean],\n  memoryWarning: [],\n};\n\n/**\n * `AppState` can tell you if the app is in the foreground or background,\n * and notify you when the state changes.\n *\n * See https://reactnative.dev/docs/appstate\n */\nclass AppState {\n  currentState: ?string = null;\n  isAvailable: boolean;\n\n  _emitter: ?NativeEventEmitter<NativeAppStateEventDefinitions>;\n\n  constructor() {\n    if (NativeAppState == null) {\n      this.isAvailable = false;\n    } else {\n      this.isAvailable = true;\n\n      const emitter: NativeEventEmitter<NativeAppStateEventDefinitions> =\n        new NativeEventEmitter(\n          // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n          // If you want to use the native module on other platforms, please remove this condition and test its behavior\n          Platform.OS !== 'ios' ? null : NativeAppState,\n        );\n      this._emitter = emitter;\n\n      this.currentState = NativeAppState.getConstants().initialAppState;\n\n      let eventUpdated = false;\n\n      // TODO: this is a terrible solution - in order to ensure `currentState`\n      // prop is up to date, we have to register an observer that updates it\n      // whenever the state changes, even if nobody cares. We should just\n      // deprecate the `currentState` property and get rid of this.\n      emitter.addListener('appStateDidChange', appStateData => {\n        eventUpdated = true;\n        this.currentState = appStateData.app_state;\n      });\n\n      // TODO: see above - this request just populates the value of `currentState`\n      // when the module is first initialized. Would be better to get rid of the\n      // prop and expose `getCurrentAppState` method directly.\n      // $FlowExpectedError[incompatible-call]\n      NativeAppState.getCurrentAppState(appStateData => {\n        // It's possible that the state will have changed here & listeners need to be notified\n        if (!eventUpdated && this.currentState !== appStateData.app_state) {\n          this.currentState = appStateData.app_state;\n          emitter.emit('appStateDidChange', appStateData);\n        }\n      }, logError);\n    }\n  }\n\n  // TODO: now that AppState is a subclass of NativeEventEmitter, we could\n  // deprecate `addEventListener` and `removeEventListener` and just use\n  // addListener` and `listener.remove()` directly. That will be a breaking\n  // change though, as both the method and event names are different\n  // (addListener events are currently required to be globally unique).\n  /**\n   * Add a handler to AppState changes by listening to the `change` event type\n   * and providing the handler.\n   *\n   * See https://reactnative.dev/docs/appstate#addeventlistener\n   */\n  addEventListener<K: $Keys<AppStateEventDefinitions>>(\n    type: K,\n    handler: (...$ElementType<AppStateEventDefinitions, K>) => void,\n  ): EventSubscription {\n    const emitter = this._emitter;\n    if (emitter == null) {\n      throw new Error('Cannot use AppState when `isAvailable` is false.');\n    }\n    switch (type) {\n      case 'change':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        const changeHandler: AppStateValues => void = handler;\n        return emitter.addListener('appStateDidChange', appStateData => {\n          changeHandler(appStateData.app_state);\n        });\n      case 'memoryWarning':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        const memoryWarningHandler: () => void = handler;\n        return emitter.addListener('memoryWarning', memoryWarningHandler);\n      case 'blur':\n      case 'focus':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        const focusOrBlurHandler: () => void = handler;\n        return emitter.addListener('appStateFocusChange', hasFocus => {\n          if (type === 'blur' && !hasFocus) {\n            focusOrBlurHandler();\n          }\n          if (type === 'focus' && hasFocus) {\n            focusOrBlurHandler();\n          }\n        });\n    }\n    throw new Error('Trying to subscribe to unknown event: ' + type);\n  }\n\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addEventListener`.\n   */\n  removeEventListener<K: $Keys<AppStateEventDefinitions>>(\n    type: K,\n    listener: (...$ElementType<AppStateEventDefinitions, K>) => mixed,\n  ): void {\n    const emitter = this._emitter;\n    if (emitter == null) {\n      throw new Error('Cannot use AppState when `isAvailable` is false.');\n    }\n    // NOTE: This will report a deprecation notice via `console.error`.\n    switch (type) {\n      case 'change':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        // $FlowIssue[incompatible-call]\n        emitter.removeListener('appStateDidChange', listener);\n        return;\n      case 'memoryWarning':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        emitter.removeListener('memoryWarning', listener);\n        return;\n      case 'blur':\n      case 'focus':\n        // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n        // $FlowIssue[incompatible-call]\n        emitter.addListener('appStateFocusChange', listener);\n        return;\n    }\n    throw new Error('Trying to unsubscribe from unknown event: ' + type);\n  }\n}\n\nmodule.exports = (new AppState(): AppState);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    initialAppState: string,\n  |};\n  +getCurrentAppState: (\n    success: (appState: {|app_state: string|}) => void,\n    error: (error: Object) => void,\n  ) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('AppState'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {BlobData, BlobOptions} from './BlobTypes';\n\n/**\n * Opaque JS representation of some binary data in native.\n *\n * The API is modeled after the W3C Blob API, with one caveat\n * regarding explicit deallocation. Refer to the `close()`\n * method for further details.\n *\n * Example usage in a React component:\n *\n *   class WebSocketImage extends React.Component {\n *      state = {blob: null};\n *      componentDidMount() {\n *        let ws = this.ws = new WebSocket(...);\n *        ws.binaryType = 'blob';\n *        ws.onmessage = (event) => {\n *          if (this.state.blob) {\n *            this.state.blob.close();\n *          }\n *          this.setState({blob: event.data});\n *        };\n *      }\n *      componentUnmount() {\n *        if (this.state.blob) {\n *          this.state.blob.close();\n *        }\n *        this.ws.close();\n *      }\n *      render() {\n *        if (!this.state.blob) {\n *          return <View />;\n *        }\n *        return <Image source={{uri: URL.createObjectURL(this.state.blob)}} />;\n *      }\n *   }\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob\n */\nclass Blob {\n  _data: ?BlobData;\n\n  /**\n   * Constructor for JS consumers.\n   * Currently we only support creating Blobs from other Blobs.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob\n   */\n  constructor(parts: Array<Blob | string> = [], options?: BlobOptions) {\n    const BlobManager = require('./BlobManager');\n    this.data = BlobManager.createFromParts(parts, options).data;\n  }\n\n  /*\n   * This method is used to create a new Blob object containing\n   * the data in the specified range of bytes of the source Blob.\n   * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  set data(data: ?BlobData) {\n    this._data = data;\n  }\n\n  // $FlowFixMe[unsafe-getters-setters]\n  get data(): BlobData {\n    if (!this._data) {\n      throw new Error('Blob has been closed and is no longer available');\n    }\n\n    return this._data;\n  }\n\n  slice(start?: number, end?: number): Blob {\n    const BlobManager = require('./BlobManager');\n    let {offset, size} = this.data;\n\n    if (typeof start === 'number') {\n      if (start > size) {\n        // $FlowFixMe[reassign-const]\n        start = size;\n      }\n      offset += start;\n      size -= start;\n\n      if (typeof end === 'number') {\n        if (end < 0) {\n          // $FlowFixMe[reassign-const]\n          end = this.size + end;\n        }\n        size = end - start;\n      }\n    }\n    return BlobManager.createFromOptions({\n      blobId: this.data.blobId,\n      offset,\n      size,\n    });\n  }\n\n  /**\n   * This method is in the standard, but not actually implemented by\n   * any browsers at this point. It's important for how Blobs work in\n   * React Native, however, since we cannot de-allocate resources automatically,\n   * so consumers need to explicitly de-allocate them.\n   *\n   * Note that the semantics around Blobs created via `blob.slice()`\n   * and `new Blob([blob])` are different. `blob.slice()` creates a\n   * new *view* onto the same binary data, so calling `close()` on any\n   * of those views is enough to deallocate the data, whereas\n   * `new Blob([blob, ...])` actually copies the data in memory.\n   */\n  close() {\n    const BlobManager = require('./BlobManager');\n    BlobManager.release(this.data.blobId);\n    this.data = null;\n  }\n\n  /**\n   * Size of the data contained in the Blob object, in bytes.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get size(): number {\n    return this.data.size;\n  }\n\n  /*\n   * String indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   */\n  // $FlowFixMe[unsafe-getters-setters]\n  get type(): string {\n    return this.data.type || '';\n  }\n}\n\nmodule.exports = Blob;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nconst Blob = require('./Blob');\nconst BlobRegistry = require('./BlobRegistry');\n\nimport type {BlobData, BlobOptions, BlobCollector} from './BlobTypes';\nimport NativeBlobModule from './NativeBlobModule';\nimport invariant from 'invariant';\n\n/*eslint-disable no-bitwise */\n/*eslint-disable eqeqeq */\n\n/**\n * Based on the rfc4122-compliant solution posted at\n * http://stackoverflow.com/questions/105034\n */\nfunction uuidv4(): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// **Temporary workaround**\n// TODO(#24654): Use turbomodules for the Blob module.\n// Blob collector is a jsi::HostObject that is used by native to know\n// when the a Blob instance is deallocated. This allows to free the\n// underlying native resources. This is a hack to workaround the fact\n// that the current bridge infra doesn't allow to track js objects\n// deallocation. Ideally the whole Blob object should be a jsi::HostObject.\nfunction createBlobCollector(blobId: string): BlobCollector | null {\n  if (global.__blobCollectorProvider == null) {\n    return null;\n  } else {\n    return global.__blobCollectorProvider(blobId);\n  }\n}\n\n/**\n * Module to manage blobs. Wrapper around the native blob module.\n */\nclass BlobManager {\n  /**\n   * If the native blob module is available.\n   */\n  static isAvailable: boolean = !!NativeBlobModule;\n\n  /**\n   * Create blob from existing array of blobs.\n   */\n  static createFromParts(\n    parts: Array<Blob | string>,\n    options?: BlobOptions,\n  ): Blob {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    const blobId = uuidv4();\n    const items = parts.map(part => {\n      if (\n        part instanceof ArrayBuffer ||\n        (global.ArrayBufferView && part instanceof global.ArrayBufferView)\n      ) {\n        throw new Error(\n          \"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\",\n        );\n      }\n      if (part instanceof Blob) {\n        return {\n          data: part.data,\n          type: 'blob',\n        };\n      } else {\n        return {\n          data: String(part),\n          type: 'string',\n        };\n      }\n    });\n    const size = items.reduce((acc, curr) => {\n      if (curr.type === 'string') {\n        return acc + global.unescape(encodeURI(curr.data)).length;\n      } else {\n        return acc + curr.data.size;\n      }\n    }, 0);\n\n    NativeBlobModule.createFromParts(items, blobId);\n\n    return BlobManager.createFromOptions({\n      blobId,\n      offset: 0,\n      size,\n      type: options ? options.type : '',\n      lastModified: options ? options.lastModified : Date.now(),\n    });\n  }\n\n  /**\n   * Create blob instance from blob data from native.\n   * Used internally by modules like XHR, WebSocket, etc.\n   */\n  static createFromOptions(options: BlobData): Blob {\n    BlobRegistry.register(options.blobId);\n    return Object.assign(Object.create(Blob.prototype), {\n      data:\n        // Reuse the collector instance when creating from an existing blob.\n        // This will make sure that the underlying resource is only deallocated\n        // when all blobs that refer to it are deallocated.\n        options.__collector == null\n          ? {\n              ...options,\n              __collector: createBlobCollector(options.blobId),\n            }\n          : options,\n    });\n  }\n\n  /**\n   * Deallocate resources for a blob.\n   */\n  static release(blobId: string): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    BlobRegistry.unregister(blobId);\n    if (BlobRegistry.has(blobId)) {\n      return;\n    }\n    NativeBlobModule.release(blobId);\n  }\n\n  /**\n   * Inject the blob content handler in the networking module to support blob\n   * requests and responses.\n   */\n  static addNetworkingHandler(): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addNetworkingHandler();\n  }\n\n  /**\n   * Indicate the websocket should return a blob for incoming binary\n   * messages.\n   */\n  static addWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.addWebSocketHandler(socketId);\n  }\n\n  /**\n   * Indicate the websocket should no longer return a blob for incoming\n   * binary messages.\n   */\n  static removeWebSocketHandler(socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.removeWebSocketHandler(socketId);\n  }\n\n  /**\n   * Send a blob message to a websocket.\n   */\n  static sendOverSocket(blob: Blob, socketId: number): void {\n    invariant(NativeBlobModule, 'NativeBlobModule is available.');\n\n    NativeBlobModule.sendOverSocket(blob.data, socketId);\n  }\n}\n\nmodule.exports = BlobManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nconst registry: {[key: string]: number, ...} = {};\n\nconst register = (id: string) => {\n  if (registry[id]) {\n    registry[id]++;\n  } else {\n    registry[id] = 1;\n  }\n};\n\nconst unregister = (id: string) => {\n  if (registry[id]) {\n    registry[id]--;\n    if (registry[id] <= 0) {\n      delete registry[id];\n    }\n  }\n};\n\nconst has = (id: string): number | boolean => {\n  return registry[id] && registry[id] > 0;\n};\n\nmodule.exports = {\n  register,\n  unregister,\n  has,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|};\n  +addNetworkingHandler: () => void;\n  +addWebSocketHandler: (id: number) => void;\n  +removeWebSocketHandler: (id: number) => void;\n  +sendOverSocket: (blob: Object, socketID: number) => void;\n  +createFromParts: (parts: Array<Object>, withId: string) => void;\n  +release: (blobId: string) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.get<Spec>('BlobModule');\n\nlet constants = null;\nlet NativeBlobModule = null;\n\nif (NativeModule != null) {\n  NativeBlobModule = {\n    getConstants(): {|BLOB_URI_SCHEME: ?string, BLOB_URI_HOST: ?string|} {\n      if (constants == null) {\n        constants = NativeModule.getConstants();\n      }\n      return constants;\n    },\n    addNetworkingHandler(): void {\n      NativeModule.addNetworkingHandler();\n    },\n    addWebSocketHandler(id: number): void {\n      NativeModule.addWebSocketHandler(id);\n    },\n    removeWebSocketHandler(id: number): void {\n      NativeModule.removeWebSocketHandler(id);\n    },\n    sendOverSocket(blob: Object, socketID: number): void {\n      NativeModule.sendOverSocket(blob, socketID);\n    },\n    createFromParts(parts: Array<Object>, withId: string): void {\n      NativeModule.createFromParts(parts, withId);\n    },\n    release(blobId: string): void {\n      NativeModule.release(blobId);\n    },\n  };\n}\n\nexport default (NativeBlobModule: ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport {\n  type EventSubscription,\n  type IEventEmitter,\n} from '../vendor/emitter/EventEmitter';\nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n\ninterface NativeModule {\n  addListener(eventType: string): void;\n  removeListeners(count: number): void;\n}\n\nexport type {EventSubscription};\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter<TEventToArgsMap: {...}>\n  implements IEventEmitter<TEventToArgsMap>\n{\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(\n        nativeModule != null,\n        '`new NativeEventEmitter()` requires a non-null argument.',\n      );\n    }\n\n    const hasAddListener =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners =\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      !!nativeModule && typeof nativeModule.removeListeners === 'function';\n\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.',\n        );\n      }\n      if (!hasRemoveListeners) {\n        console.warn(\n          '`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.',\n        );\n      }\n    }\n  }\n\n  addListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,\n    context?: mixed,\n  ): EventSubscription {\n    this._nativeModule?.addListener(eventType);\n    let subscription: ?EventSubscription = RCTDeviceEventEmitter.addListener(\n      eventType,\n      listener,\n      context,\n    );\n\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          // $FlowFixMe[incompatible-use]\n          subscription.remove();\n          subscription = null;\n        }\n      },\n    };\n  }\n\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n  removeListener<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    listener: (...args: $ElementType<TEventToArgsMap, TEvent>) => mixed,\n  ): void {\n    this._nativeModule?.removeListeners(1);\n    // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n    RCTDeviceEventEmitter.removeListener(eventType, listener);\n  }\n\n  emit<TEvent: $Keys<TEventToArgsMap>>(\n    eventType: TEvent,\n    ...args: $ElementType<TEventToArgsMap, TEvent>\n  ): void {\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners<TEvent: $Keys<TEventToArgsMap>>(\n    eventType?: ?TEvent,\n  ): void {\n    invariant(\n      eventType != null,\n      '`NativeEventEmitter.removeAllListener()` requires a non-null argument.',\n    );\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount<TEvent: $Keys<TEventToArgsMap>>(eventType: TEvent): number {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\n\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTNativeAppEventEmitter.\n */\nconst RCTNativeAppEventEmitter = RCTDeviceEventEmitter;\nmodule.exports = RCTNativeAppEventEmitter;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +reload: () => void;\n  +reloadWithReason?: (reason: string) => void;\n  +onFastRefresh?: () => void;\n  +setHotLoadingEnabled: (isHotLoadingEnabled: boolean) => void;\n  +setIsDebuggingRemotely: (isDebuggingRemotelyEnabled: boolean) => void;\n  +setProfilingEnabled: (isProfilingEnabled: boolean) => void;\n  +toggleElementInspector: () => void;\n  +addMenuItem: (title: string) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n\n  // iOS only.\n  +setIsShakeToShowDevMenuEnabled: (enabled: boolean) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('DevSettings'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\n/* 'buttonClicked' | 'dismissed' */\ntype DialogAction = string;\n/*\n  buttonPositive = -1,\n  buttonNegative = -2,\n  buttonNeutral = -3\n*/\ntype DialogButtonKey = number;\nexport type DialogOptions = {|\n  title?: string,\n  message?: string,\n  buttonPositive?: string,\n  buttonNegative?: string,\n  buttonNeutral?: string,\n  items?: Array<string>,\n  cancelable?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +buttonClicked: DialogAction,\n    +dismissed: DialogAction,\n    +buttonPositive: DialogButtonKey,\n    +buttonNegative: DialogButtonKey,\n    +buttonNeutral: DialogButtonKey,\n  |};\n  +showAlert: (\n    config: DialogOptions,\n    onError: (error: string) => void,\n    onAction: (action: DialogAction, buttonKey?: DialogButtonKey) => void,\n  ) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('DialogManagerAndroid'): ?Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\ntype FormDataNameValuePair = [string, FormDataValue];\n\ntype Headers = {[name: string]: string, ...};\ntype FormDataPart =\n  | {\n      string: string,\n      headers: Headers,\n      ...\n    }\n  | {\n      uri: string,\n      headers: Headers,\n      name?: string,\n      type?: string,\n      ...\n    };\n\n/**\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n *\n * Example:\n *\n *   var photo = {\n *     uri: uriFromCameraRoll,\n *     type: 'image/jpeg',\n *     name: 'photo.jpg',\n *   };\n *\n *   var body = new FormData();\n *   body.append('authToken', 'secret');\n *   body.append('photo', photo);\n *   body.append('title', 'A beautiful photo!');\n *\n *   xhr.open('POST', serverURL);\n *   xhr.send(body);\n */\nclass FormData {\n  _parts: Array<FormDataNameValuePair>;\n\n  constructor() {\n    this._parts = [];\n  }\n\n  append(key: string, value: FormDataValue) {\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n    // MDN says that any new values should be appended to existing values.\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\n    // too. They'll simply get appended as additional form data parts in the\n    // request body, leaving the server to deal with them.\n    this._parts.push([key, value]);\n  }\n\n  getParts(): Array<FormDataPart> {\n    return this._parts.map(([name, value]) => {\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\n\n      const headers: Headers = {'content-disposition': contentDisposition};\n\n      // The body part is a \"blob\", which in React Native just means\n      // an object with a `uri` attribute. Optionally, it can also\n      // have a `name` and `type` attribute to specify filename and\n      // content type (cf. web Blob interface.)\n      if (typeof value === 'object' && value) {\n        if (typeof value.name === 'string') {\n          headers['content-disposition'] += '; filename=\"' + value.name + '\"';\n        }\n        if (typeof value.type === 'string') {\n          headers['content-type'] = value.type;\n        }\n        return {...value, headers, fieldName: name};\n      }\n      // Convert non-object values to strings as per FormData.append() spec\n      return {string: String(value), headers, fieldName: name};\n    });\n  }\n}\n\nmodule.exports = FormData;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\ntype Header = [string, string];\n\nexport interface Spec extends TurboModule {\n  +sendRequest: (\n    method: string,\n    url: string,\n    requestId: number,\n    headers: Array<Header>,\n    data: Object,\n    responseType: string,\n    useIncrementalUpdates: boolean,\n    timeout: number,\n    withCredentials: boolean,\n  ) => void;\n  +abortRequest: (requestId: number) => void;\n  +clearCookies: (callback: (result: boolean) => void) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>('Networking'): Spec);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n// Do not require the native RCTNetworking module directly! Use this wrapper module instead.\n// It will add the necessary requestId, so that you don't have to generate it yourself.\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport NativeNetworkingAndroid from './NativeNetworkingAndroid';\nimport convertRequestBody from './convertRequestBody';\nimport type {RequestBody} from './convertRequestBody';\nimport Platform from '../Utilities/Platform';\n\ntype Header = [string, string];\n\n// Convert FormData headers to arrays, which are easier to consume in\n// native on Android.\nfunction convertHeadersMapToArray(headers: Object): Array<Header> {\n  const headerArray = [];\n  for (const name in headers) {\n    headerArray.push([name, headers[name]]);\n  }\n  return headerArray;\n}\n\nlet _requestId = 1;\nfunction generateRequestId(): number {\n  return _requestId++;\n}\n\n/**\n * This class is a wrapper around the native RCTNetworking module. It adds a necessary unique\n * requestId to each network request that can be used to abort that request later on.\n */\n// FIXME: use typed events\nclass RCTNetworking extends NativeEventEmitter<$FlowFixMe> {\n  constructor() {\n    super(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeNetworkingAndroid,\n    );\n  }\n\n  sendRequest(\n    method: string,\n    trackingName: string,\n    url: string,\n    headers: Object,\n    data: RequestBody,\n    responseType: 'text' | 'base64',\n    incrementalUpdates: boolean,\n    timeout: number,\n    callback: (requestId: number) => mixed,\n    withCredentials: boolean,\n  ) {\n    const body = convertRequestBody(data);\n    if (body && body.formData) {\n      body.formData = body.formData.map(part => ({\n        ...part,\n        headers: convertHeadersMapToArray(part.headers),\n      }));\n    }\n    const requestId = generateRequestId();\n    NativeNetworkingAndroid.sendRequest(\n      method,\n      url,\n      requestId,\n      convertHeadersMapToArray(headers),\n      {...body, trackingName},\n      responseType,\n      incrementalUpdates,\n      timeout,\n      withCredentials,\n    );\n    callback(requestId);\n  }\n\n  abortRequest(requestId: number) {\n    NativeNetworkingAndroid.abortRequest(requestId);\n  }\n\n  clearCookies(callback: (result: boolean) => any) {\n    NativeNetworkingAndroid.clearCookies(callback);\n  }\n}\n\nmodule.exports = (new RCTNetworking(): RCTNetworking);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\n\nimport type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';\n\nconst BlobManager = require('../Blob/BlobManager');\nconst EventTarget = require('event-target-shim');\nconst GlobalPerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\nconst RCTNetworking = require('./RCTNetworking');\n\nconst base64 = require('base64-js');\nconst invariant = require('invariant');\n\nconst DEBUG_NETWORK_SEND_DELAY: false = false; // Set to a number of milliseconds when debugging\n\nexport type NativeResponseType = 'base64' | 'blob' | 'text';\nexport type ResponseType =\n  | ''\n  | 'arraybuffer'\n  | 'blob'\n  | 'document'\n  | 'json'\n  | 'text';\nexport type Response = ?Object | string;\n\ntype XHRInterceptor = interface {\n  requestSent(id: number, url: string, method: string, headers: Object): void,\n  responseReceived(\n    id: number,\n    url: string,\n    status: number,\n    headers: Object,\n  ): void,\n  dataReceived(id: number, data: string): void,\n  loadingFinished(id: number, encodedDataLength: number): void,\n  loadingFailed(id: number, error: string): void,\n};\n\n// The native blob module is optional so inject it here if available.\nif (BlobManager.isAvailable) {\n  BlobManager.addNetworkingHandler();\n}\n\nconst UNSENT = 0;\nconst OPENED = 1;\nconst HEADERS_RECEIVED = 2;\nconst LOADING = 3;\nconst DONE = 4;\n\nconst SUPPORTED_RESPONSE_TYPES = {\n  arraybuffer: typeof global.ArrayBuffer === 'function',\n  blob: typeof global.Blob === 'function',\n  document: false,\n  json: true,\n  text: true,\n  '': true,\n};\n\nconst REQUEST_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'progress',\n  'timeout',\n  'loadend',\n];\n\nconst XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');\n\nclass XMLHttpRequestEventTarget extends (EventTarget(...REQUEST_EVENTS): any) {\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n}\n\n/**\n * Shared base for platform-specific XMLHttpRequest implementations.\n */\nclass XMLHttpRequest extends (EventTarget(...XHR_EVENTS): any) {\n  static UNSENT: number = UNSENT;\n  static OPENED: number = OPENED;\n  static HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  static _interceptor: ?XHRInterceptor = null;\n\n  UNSENT: number = UNSENT;\n  OPENED: number = OPENED;\n  HEADERS_RECEIVED: number = HEADERS_RECEIVED;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  // EventTarget automatically initializes these to `null`.\n  onload: ?Function;\n  onloadstart: ?Function;\n  onprogress: ?Function;\n  ontimeout: ?Function;\n  onerror: ?Function;\n  onabort: ?Function;\n  onloadend: ?Function;\n  onreadystatechange: ?Function;\n\n  readyState: number = UNSENT;\n  responseHeaders: ?Object;\n  status: number = 0;\n  timeout: number = 0;\n  responseURL: ?string;\n  withCredentials: boolean = true;\n\n  upload: XMLHttpRequestEventTarget = new XMLHttpRequestEventTarget();\n\n  _requestId: ?number;\n  _subscriptions: Array<EventSubscription>;\n\n  _aborted: boolean = false;\n  _cachedResponse: Response;\n  _hasError: boolean = false;\n  _headers: Object;\n  _lowerCaseResponseHeaders: Object;\n  _method: ?string = null;\n  _perfKey: ?string = null;\n  _responseType: ResponseType;\n  _response: string = '';\n  _sent: boolean;\n  _url: ?string = null;\n  _timedOut: boolean = false;\n  _trackingName: string = 'unknown';\n  _incrementalEvents: boolean = false;\n  _performanceLogger: IPerformanceLogger = GlobalPerformanceLogger;\n\n  static setInterceptor(interceptor: ?XHRInterceptor) {\n    XMLHttpRequest._interceptor = interceptor;\n  }\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this.readyState = this.UNSENT;\n    this.responseHeaders = undefined;\n    this.status = 0;\n    delete this.responseURL;\n\n    this._requestId = null;\n\n    this._cachedResponse = undefined;\n    this._hasError = false;\n    this._headers = {};\n    this._response = '';\n    this._responseType = '';\n    this._sent = false;\n    this._lowerCaseResponseHeaders = {};\n\n    this._clearSubscriptions();\n    this._timedOut = false;\n  }\n\n  get responseType(): ResponseType {\n    return this._responseType;\n  }\n\n  set responseType(responseType: ResponseType): void {\n    if (this._sent) {\n      throw new Error(\n        \"Failed to set the 'responseType' property on 'XMLHttpRequest': The \" +\n          'response type cannot be set after the request has been sent.',\n      );\n    }\n    if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {\n      console.warn(\n        `The provided value '${responseType}' is not a valid 'responseType'.`,\n      );\n      return;\n    }\n\n    // redboxes early, e.g. for 'arraybuffer' on ios 7\n    invariant(\n      SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document',\n      `The provided value '${responseType}' is unsupported in this environment.`,\n    );\n\n    if (responseType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n    }\n    this._responseType = responseType;\n  }\n\n  get responseText(): string {\n    if (this._responseType !== '' && this._responseType !== 'text') {\n      throw new Error(\n        \"The 'responseText' property is only available if 'responseType' \" +\n          `is set to '' or 'text', but it is '${this._responseType}'.`,\n      );\n    }\n    if (this.readyState < LOADING) {\n      return '';\n    }\n    return this._response;\n  }\n\n  get response(): Response {\n    const {responseType} = this;\n    if (responseType === '' || responseType === 'text') {\n      return this.readyState < LOADING || this._hasError ? '' : this._response;\n    }\n\n    if (this.readyState !== DONE) {\n      return null;\n    }\n\n    if (this._cachedResponse !== undefined) {\n      return this._cachedResponse;\n    }\n\n    switch (responseType) {\n      case 'document':\n        this._cachedResponse = null;\n        break;\n\n      case 'arraybuffer':\n        this._cachedResponse = base64.toByteArray(this._response).buffer;\n        break;\n\n      case 'blob':\n        if (typeof this._response === 'object' && this._response) {\n          this._cachedResponse = BlobManager.createFromOptions(this._response);\n        } else if (this._response === '') {\n          this._cachedResponse = BlobManager.createFromParts([]);\n        } else {\n          throw new Error(`Invalid response for blob: ${this._response}`);\n        }\n        break;\n\n      case 'json':\n        try {\n          this._cachedResponse = JSON.parse(this._response);\n        } catch (_) {\n          this._cachedResponse = null;\n        }\n        break;\n\n      default:\n        this._cachedResponse = null;\n    }\n\n    return this._cachedResponse;\n  }\n\n  // exposed for testing\n  __didCreateRequest(requestId: number): void {\n    this._requestId = requestId;\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.requestSent(\n        requestId,\n        this._url || '',\n        this._method || 'GET',\n        this._headers,\n      );\n  }\n\n  // exposed for testing\n  __didUploadProgress(\n    requestId: number,\n    progress: number,\n    total: number,\n  ): void {\n    if (requestId === this._requestId) {\n      this.upload.dispatchEvent({\n        type: 'progress',\n        lengthComputable: true,\n        loaded: progress,\n        total,\n      });\n    }\n  }\n\n  __didReceiveResponse(\n    requestId: number,\n    status: number,\n    responseHeaders: ?Object,\n    responseURL: ?string,\n  ): void {\n    if (requestId === this._requestId) {\n      this._perfKey != null &&\n        this._performanceLogger.stopTimespan(this._perfKey);\n      this.status = status;\n      this.setResponseHeaders(responseHeaders);\n      this.setReadyState(this.HEADERS_RECEIVED);\n      if (responseURL || responseURL === '') {\n        this.responseURL = responseURL;\n      } else {\n        delete this.responseURL;\n      }\n\n      XMLHttpRequest._interceptor &&\n        XMLHttpRequest._interceptor.responseReceived(\n          requestId,\n          responseURL || this._url || '',\n          status,\n          responseHeaders || {},\n        );\n    }\n  }\n\n  __didReceiveData(requestId: number, response: string): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this._response = response;\n    this._cachedResponse = undefined; // force lazy recomputation\n    this.setReadyState(this.LOADING);\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.dataReceived(requestId, response);\n  }\n\n  __didReceiveIncrementalData(\n    requestId: number,\n    responseText: string,\n    progress: number,\n    total: number,\n  ) {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    if (!this._response) {\n      this._response = responseText;\n    } else {\n      this._response += responseText;\n    }\n\n    XMLHttpRequest._interceptor &&\n      XMLHttpRequest._interceptor.dataReceived(requestId, responseText);\n\n    this.setReadyState(this.LOADING);\n    this.__didReceiveDataProgress(requestId, progress, total);\n  }\n\n  __didReceiveDataProgress(\n    requestId: number,\n    loaded: number,\n    total: number,\n  ): void {\n    if (requestId !== this._requestId) {\n      return;\n    }\n    this.dispatchEvent({\n      type: 'progress',\n      lengthComputable: total >= 0,\n      loaded,\n      total,\n    });\n  }\n\n  // exposed for testing\n  __didCompleteResponse(\n    requestId: number,\n    error: string,\n    timeOutError: boolean,\n  ): void {\n    if (requestId === this._requestId) {\n      if (error) {\n        if (this._responseType === '' || this._responseType === 'text') {\n          this._response = error;\n        }\n        this._hasError = true;\n        if (timeOutError) {\n          this._timedOut = true;\n        }\n      }\n      this._clearSubscriptions();\n      this._requestId = null;\n      this.setReadyState(this.DONE);\n\n      if (error) {\n        XMLHttpRequest._interceptor &&\n          XMLHttpRequest._interceptor.loadingFailed(requestId, error);\n      } else {\n        XMLHttpRequest._interceptor &&\n          XMLHttpRequest._interceptor.loadingFinished(\n            requestId,\n            this._response.length,\n          );\n      }\n    }\n  }\n\n  _clearSubscriptions(): void {\n    (this._subscriptions || []).forEach(sub => {\n      if (sub) {\n        sub.remove();\n      }\n    });\n    this._subscriptions = [];\n  }\n\n  getAllResponseHeaders(): ?string {\n    if (!this.responseHeaders) {\n      // according to the spec, return null if no response has been received\n      return null;\n    }\n\n    // Assign to non-nullable local variable.\n    const responseHeaders = this.responseHeaders;\n\n    const unsortedHeaders: Map<\n      string,\n      {lowerHeaderName: string, upperHeaderName: string, headerValue: string},\n    > = new Map();\n    for (const rawHeaderName of Object.keys(responseHeaders)) {\n      const headerValue = responseHeaders[rawHeaderName];\n      const lowerHeaderName = rawHeaderName.toLowerCase();\n      const header = unsortedHeaders.get(lowerHeaderName);\n      if (header) {\n        header.headerValue += ', ' + headerValue;\n        unsortedHeaders.set(lowerHeaderName, header);\n      } else {\n        unsortedHeaders.set(lowerHeaderName, {\n          lowerHeaderName,\n          upperHeaderName: rawHeaderName.toUpperCase(),\n          headerValue,\n        });\n      }\n    }\n\n    // Sort in ascending order, with a being less than b if a's name is legacy-uppercased-byte less than b's name.\n    const sortedHeaders = [...unsortedHeaders.values()].sort((a, b) => {\n      if (a.upperHeaderName < b.upperHeaderName) {\n        return -1;\n      }\n      if (a.upperHeaderName > b.upperHeaderName) {\n        return 1;\n      }\n      return 0;\n    });\n\n    // Combine into single text response.\n    return (\n      sortedHeaders\n        .map(header => {\n          return header.lowerHeaderName + ': ' + header.headerValue;\n        })\n        .join('\\r\\n') + '\\r\\n'\n    );\n  }\n\n  getResponseHeader(header: string): ?string {\n    const value = this._lowerCaseResponseHeaders[header.toLowerCase()];\n    return value !== undefined ? value : null;\n  }\n\n  setRequestHeader(header: string, value: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    this._headers[header.toLowerCase()] = String(value);\n  }\n\n  /**\n   * Custom extension for tracking origins of request.\n   */\n  setTrackingName(trackingName: string): XMLHttpRequest {\n    this._trackingName = trackingName;\n    return this;\n  }\n\n  /**\n   * Custom extension for setting a custom performance logger\n   */\n  setPerformanceLogger(performanceLogger: IPerformanceLogger): XMLHttpRequest {\n    this._performanceLogger = performanceLogger;\n    return this;\n  }\n\n  open(method: string, url: string, async: ?boolean): void {\n    /* Other optional arguments are not supported yet */\n    if (this.readyState !== this.UNSENT) {\n      throw new Error('Cannot open, already sending');\n    }\n    if (async !== undefined && !async) {\n      // async is default\n      throw new Error('Synchronous http requests are not supported');\n    }\n    if (!url) {\n      throw new Error('Cannot load an empty url');\n    }\n    this._method = method.toUpperCase();\n    this._url = url;\n    this._aborted = false;\n    this.setReadyState(this.OPENED);\n  }\n\n  send(data: any): void {\n    if (this.readyState !== this.OPENED) {\n      throw new Error('Request has not been opened');\n    }\n    if (this._sent) {\n      throw new Error('Request has already been sent');\n    }\n    this._sent = true;\n    const incrementalEvents =\n      this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;\n\n    this._subscriptions.push(\n      RCTNetworking.addListener('didSendNetworkData', args =>\n        this.__didUploadProgress(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkResponse', args =>\n        this.__didReceiveResponse(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkData', args =>\n        this.__didReceiveData(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkIncrementalData', args =>\n        this.__didReceiveIncrementalData(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didReceiveNetworkDataProgress', args =>\n        this.__didReceiveDataProgress(...args),\n      ),\n    );\n    this._subscriptions.push(\n      RCTNetworking.addListener('didCompleteNetworkResponse', args =>\n        this.__didCompleteResponse(...args),\n      ),\n    );\n\n    let nativeResponseType: NativeResponseType = 'text';\n    if (this._responseType === 'arraybuffer') {\n      nativeResponseType = 'base64';\n    }\n    if (this._responseType === 'blob') {\n      nativeResponseType = 'blob';\n    }\n\n    const doSend = () => {\n      const friendlyName =\n        this._trackingName !== 'unknown' ? this._trackingName : this._url;\n      this._perfKey = 'network_XMLHttpRequest_' + String(friendlyName);\n      this._performanceLogger.startTimespan(this._perfKey);\n      invariant(\n        this._method,\n        'XMLHttpRequest method needs to be defined (%s).',\n        friendlyName,\n      );\n      invariant(\n        this._url,\n        'XMLHttpRequest URL needs to be defined (%s).',\n        friendlyName,\n      );\n      RCTNetworking.sendRequest(\n        this._method,\n        this._trackingName,\n        this._url,\n        this._headers,\n        data,\n        /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n         * when making Flow check .android.js files. */\n        nativeResponseType,\n        incrementalEvents,\n        this.timeout,\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        this.__didCreateRequest.bind(this),\n        this.withCredentials,\n      );\n    };\n    if (DEBUG_NETWORK_SEND_DELAY) {\n      setTimeout(doSend, DEBUG_NETWORK_SEND_DELAY);\n    } else {\n      doSend();\n    }\n  }\n\n  abort(): void {\n    this._aborted = true;\n    if (this._requestId) {\n      RCTNetworking.abortRequest(this._requestId);\n    }\n    // only call onreadystatechange if there is something to abort,\n    // below logic is per spec\n    if (\n      !(\n        this.readyState === this.UNSENT ||\n        (this.readyState === this.OPENED && !this._sent) ||\n        this.readyState === this.DONE\n      )\n    ) {\n      this._reset();\n      this.setReadyState(this.DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  setResponseHeaders(responseHeaders: ?Object): void {\n    this.responseHeaders = responseHeaders || null;\n    const headers = responseHeaders || {};\n    this._lowerCaseResponseHeaders = Object.keys(headers).reduce(\n      (lcaseHeaders, headerName) => {\n        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];\n        return lcaseHeaders;\n      },\n      {},\n    );\n  }\n\n  setReadyState(newState: number): void {\n    this.readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === this.DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._hasError) {\n        if (this._timedOut) {\n          this.dispatchEvent({type: 'timeout'});\n        } else {\n          this.dispatchEvent({type: 'error'});\n        }\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  /* global EventListener */\n  addEventListener(type: string, listener: EventListener): void {\n    // If we dont' have a 'readystatechange' event handler, we don't\n    // have to send repeated LOADING events with incremental updates\n    // to responseText, which will avoid a bunch of native -> JS\n    // bridge traffic.\n    if (type === 'readystatechange' || type === 'progress') {\n      this._incrementalEvents = true;\n    }\n    super.addEventListener(type, listener);\n  }\n}\n\nmodule.exports = XMLHttpRequest;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst binaryToBase64 = require('../Utilities/binaryToBase64');\n\nconst Blob = require('../Blob/Blob');\nconst FormData = require('./FormData');\n\nexport type RequestBody =\n  | string\n  | Blob\n  | FormData\n  | {uri: string, ...}\n  | ArrayBuffer\n  | $ArrayBufferView;\n\nfunction convertRequestBody(body: RequestBody): Object {\n  if (typeof body === 'string') {\n    return {string: body};\n  }\n  if (body instanceof Blob) {\n    return {blob: body.data};\n  }\n  if (body instanceof FormData) {\n    return {formData: body.getParts()};\n  }\n  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {\n    /* $FlowFixMe[incompatible-call] : no way to assert that 'body' is indeed\n     * an ArrayBufferView */\n    return {base64: binaryToBase64(body)};\n  }\n  return body;\n}\n\nmodule.exports = convertRequestBody;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport NativeDevSettings from '../NativeModules/specs/NativeDevSettings';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\n\nlet DevSettings: {\n  addMenuItem(title: string, handler: () => mixed): void,\n  reload(reason?: string): void,\n  onFastRefresh(): void,\n} = {\n  addMenuItem(title: string, handler: () => mixed): void {},\n  reload(reason?: string): void {},\n  onFastRefresh(): void {},\n};\n\ntype DevSettingsEventDefinitions = {\n  didPressMenuItem: [{title: string}],\n};\n\nif (__DEV__) {\n  const emitter = new NativeEventEmitter<DevSettingsEventDefinitions>(\n    // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n    // If you want to use the native module on other platforms, please remove this condition and test its behavior\n    Platform.OS !== 'ios' ? null : NativeDevSettings,\n  );\n  const subscriptions = new Map();\n\n  DevSettings = {\n    addMenuItem(title: string, handler: () => mixed): void {\n      // Make sure items are not added multiple times. This can\n      // happen when hot reloading the module that registers the\n      // menu items. The title is used as the id which means we\n      // don't support multiple items with the same name.\n      let subscription = subscriptions.get(title);\n      if (subscription != null) {\n        subscription.remove();\n      } else {\n        NativeDevSettings.addMenuItem(title);\n      }\n\n      subscription = emitter.addListener('didPressMenuItem', event => {\n        if (event.title === title) {\n          handler();\n        }\n      });\n      subscriptions.set(title, subscription);\n    },\n    reload(reason?: string): void {\n      if (NativeDevSettings.reloadWithReason != null) {\n        NativeDevSettings.reloadWithReason(reason ?? 'Uncategorized from JS');\n      } else {\n        NativeDevSettings.reload();\n      }\n    },\n    onFastRefresh(): void {\n      NativeDevSettings.onFastRefresh?.();\n    },\n  };\n}\n\nmodule.exports = DevSettings;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport createPerformanceLogger from './createPerformanceLogger';\nimport type {IPerformanceLogger} from './createPerformanceLogger';\n\n/**\n * This is a global shared instance of IPerformanceLogger that is created with\n * createPerformanceLogger().\n * This logger should be used only for global performance metrics like the ones\n * that are logged during loading bundle. If you want to log something from your\n * React component you should use PerformanceLoggerContext instead.\n */\nconst GlobalPerformanceLogger: IPerformanceLogger = createPerformanceLogger();\n\nmodule.exports = GlobalPerformanceLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nconst base64 = require('base64-js');\n\nfunction binaryToBase64(data: ArrayBuffer | $ArrayBufferView): string {\n  if (data instanceof ArrayBuffer) {\n    // $FlowFixMe[reassign-const]\n    data = new Uint8Array(data);\n  }\n  if (data instanceof Uint8Array) {\n    return base64.fromByteArray(data);\n  }\n  if (!ArrayBuffer.isView(data)) {\n    throw new Error('data must be ArrayBuffer or typed array');\n  }\n  // Already checked that `data` is `DataView` in `ArrayBuffer.isView(data)`\n  const {buffer, byteOffset, byteLength} = ((data: $FlowFixMe): DataView);\n  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));\n}\n\nmodule.exports = binaryToBase64;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nconst Systrace = require('../Performance/Systrace');\n\nconst infoLog = require('./infoLog');\n\nexport type Timespan = {\n  startTime: number,\n  endTime?: number,\n  totalTime?: number,\n  startExtras?: Extras,\n  endExtras?: Extras,\n};\n\n// Extra values should be serializable primitives\nexport type ExtraValue = number | string | boolean;\n\nexport type Extras = {[key: string]: ExtraValue};\n\nexport interface IPerformanceLogger {\n  addTimespan(\n    key: string,\n    startTime: number,\n    endTime: number,\n    startExtras?: Extras,\n    endExtras?: Extras,\n  ): void;\n  append(logger: IPerformanceLogger): void;\n  clear(): void;\n  clearCompleted(): void;\n  close(): void;\n  currentTimestamp(): number;\n  getExtras(): $ReadOnly<{[key: string]: ?ExtraValue, ...}>;\n  getPoints(): $ReadOnly<{[key: string]: ?number, ...}>;\n  getPointExtras(): $ReadOnly<{[key: string]: ?Extras, ...}>;\n  getTimespans(): $ReadOnly<{[key: string]: ?Timespan, ...}>;\n  hasTimespan(key: string): boolean;\n  isClosed(): boolean;\n  logEverything(): void;\n  markPoint(key: string, timestamp?: number, extras?: Extras): void;\n  removeExtra(key: string): ?ExtraValue;\n  setExtra(key: string, value: ExtraValue): void;\n  startTimespan(key: string, timestamp?: number, extras?: Extras): void;\n  stopTimespan(key: string, timestamp?: number, extras?: Extras): void;\n}\n\nconst _cookies: {[key: string]: number, ...} = {};\n\nconst PRINT_TO_CONSOLE: false = false; // Type as false to prevent accidentally committing `true`;\n\nexport const getCurrentTimestamp: () => number =\n  global.nativeQPLTimestamp ?? global.performance.now.bind(global.performance);\n\nclass PerformanceLogger implements IPerformanceLogger {\n  _timespans: {[key: string]: ?Timespan} = {};\n  _extras: {[key: string]: ?ExtraValue} = {};\n  _points: {[key: string]: ?number} = {};\n  _pointExtras: {[key: string]: ?Extras, ...} = {};\n  _closed: boolean = false;\n\n  addTimespan(\n    key: string,\n    startTime: number,\n    endTime: number,\n    startExtras?: Extras,\n    endExtras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to add a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime,\n      endTime,\n      totalTime: endTime - (startTime || 0),\n      startExtras,\n      endExtras,\n    };\n  }\n\n  append(performanceLogger: IPerformanceLogger) {\n    this._timespans = {\n      ...performanceLogger.getTimespans(),\n      ...this._timespans,\n    };\n    this._extras = {...performanceLogger.getExtras(), ...this._extras};\n    this._points = {...performanceLogger.getPoints(), ...this._points};\n    this._pointExtras = {\n      ...performanceLogger.getPointExtras(),\n      ...this._pointExtras,\n    };\n  }\n\n  clear() {\n    this._timespans = {};\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clear');\n    }\n  }\n\n  clearCompleted() {\n    for (const key in this._timespans) {\n      if (this._timespans[key]?.totalTime != null) {\n        delete this._timespans[key];\n      }\n    }\n    this._extras = {};\n    this._points = {};\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'clearCompleted');\n    }\n  }\n\n  close() {\n    this._closed = true;\n  }\n\n  currentTimestamp() {\n    return getCurrentTimestamp();\n  }\n\n  getExtras() {\n    return this._extras;\n  }\n\n  getPoints() {\n    return this._points;\n  }\n\n  getPointExtras() {\n    return this._pointExtras;\n  }\n\n  getTimespans() {\n    return this._timespans;\n  }\n\n  hasTimespan(key: string) {\n    return !!this._timespans[key];\n  }\n\n  isClosed() {\n    return this._closed;\n  }\n\n  logEverything() {\n    if (PRINT_TO_CONSOLE) {\n      // log timespans\n      for (const key in this._timespans) {\n        if (this._timespans[key]?.totalTime != null) {\n          infoLog(key + ': ' + this._timespans[key].totalTime + 'ms');\n        }\n      }\n\n      // log extras\n      infoLog(this._extras);\n\n      // log points\n      for (const key in this._points) {\n        if (this._points[key] != null) {\n          infoLog(key + ': ' + this._points[key] + 'ms');\n        }\n      }\n    }\n  }\n\n  markPoint(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: markPoint - has closed ignoring: ', key);\n      }\n      return;\n    }\n    if (this._points[key] != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to mark a point that has been already logged ',\n          key,\n        );\n      }\n      return;\n    }\n    this._points[key] = timestamp;\n    if (extras) {\n      this._pointExtras[key] = extras;\n    }\n  }\n\n  removeExtra(key: string): ?ExtraValue {\n    const value = this._extras[key];\n    delete this._extras[key];\n    return value;\n  }\n\n  setExtra(key: string, value: ExtraValue) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: setExtra - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    if (this._extras.hasOwnProperty(key)) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to set an extra that already exists ',\n          {key, currentValue: this._extras[key], attemptedValue: value},\n        );\n      }\n      return;\n    }\n    this._extras[key] = value;\n  }\n\n  startTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: startTimespan - has closed ignoring: ',\n          key,\n        );\n      }\n      return;\n    }\n\n    if (this._timespans[key]) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to start a timespan that already exists ',\n          key,\n        );\n      }\n      return;\n    }\n\n    this._timespans[key] = {\n      startTime: timestamp,\n      startExtras: extras,\n    };\n    _cookies[key] = Systrace.beginAsyncEvent(key);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'start: ' + key);\n    }\n  }\n\n  stopTimespan(\n    key: string,\n    timestamp?: number = getCurrentTimestamp(),\n    extras?: Extras,\n  ) {\n    if (this._closed) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n      }\n      return;\n    }\n\n    const timespan = this._timespans[key];\n    if (!timespan || timespan.startTime == null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has not started ',\n          key,\n        );\n      }\n      return;\n    }\n    if (timespan.endTime != null) {\n      if (PRINT_TO_CONSOLE && __DEV__) {\n        infoLog(\n          'PerformanceLogger: Attempting to end a timespan that has already ended ',\n          key,\n        );\n      }\n      return;\n    }\n\n    timespan.endExtras = extras;\n    timespan.endTime = timestamp;\n    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n    if (PRINT_TO_CONSOLE) {\n      infoLog('PerformanceLogger.js', 'end: ' + key);\n    }\n\n    if (_cookies[key] != null) {\n      Systrace.endAsyncEvent(key, _cookies[key]);\n      delete _cookies[key];\n    }\n  }\n}\n\n/**\n * This function creates performance loggers that can be used to collect and log\n * various performance data such as timespans, points and extras.\n * The loggers need to have minimal overhead since they're used in production.\n */\nexport default function createPerformanceLogger(): IPerformanceLogger {\n  return new PerformanceLogger();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args: Array<mixed>): void {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nconst logError = function (...args: $ReadOnlyArray<mixed>) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    const err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\nmodule.exports = logError;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +connect: (\n    url: string,\n    protocols: ?Array<string>,\n    options: {|headers?: Object|},\n    socketID: number,\n  ) => void;\n  +send: (message: string, forSocketID: number) => void;\n  +sendBinary: (base64String: string, forSocketID: number) => void;\n  +ping: (socketID: number) => void;\n  +close: (code: number, reason: string, socketID: number) => void;\n\n  // RCTEventEmitter\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'WebSocketModule',\n): Spec);\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexports.defineEventAttribute = defineEventAttribute;\nexports.EventTarget = EventTarget;\nexports.default = EventTarget;\n\nmodule.exports = EventTarget\nmodule.exports.EventTarget = module.exports[\"default\"] = EventTarget\nmodule.exports.defineEventAttribute = defineEventAttribute\n//# sourceMappingURL=event-target-shim.js.map\n","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  return module.exports = _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _get.apply(null, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););\n  return t;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["_Platform","_interopRequireDefault","require","_RCTAlertManager","Alert","_classCallCheck2","default","_createClass2","key","value","title","message","buttons","options","Platform","OS","prompt","NativeDialogManagerAndroid","constants","getConstants","config","cancelable","validButtons","slice","text","buttonPositive","pop","buttonNegative","buttonNeutral","showAlert","errorMessage","console","warn","action","buttonKey","buttonClicked","onPress","dismissed","onDismiss","callbackOrButtons","type","arguments","length","undefined","defaultValue","keyboardType","cancelButtonKey","destructiveButtonKey","callbacks","Array","isArray","forEach","btn","index","style","String","btnDef","push","RCTAlertManager","alertWithArgs","id","cb","module","exports","_NativeDialogManagerAndroid","emptyCallback","args","callback","_NativeEventEmitter","_logError","_NativeAppState","AppState","_this","currentState","NativeAppState","this","isAvailable","emitter","NativeEventEmitter","_emitter","initialAppState","eventUpdated","addListener","appStateData","app_state","getCurrentAppState","emit","logError","handler","Error","changeHandler","memoryWarningHandler","focusOrBlurHandler","hasFocus","listener","removeListener","TurboModuleRegistry","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","getEnforcing","Blob","parts","BlobManager","data","createFromParts","_data","start","end","_this$data","offset","size","createFromOptions","blobId","release","_NativeBlobModule","_invariant","BlobRegistry","invariant","NativeBlobModule","replace","c","Math","random","toString","items","map","part","ArrayBuffer","global","ArrayBufferView","reduce","acc","curr","unescape","encodeURI","lastModified","Date","now","register","_extends2","create","prototype","__collector","__blobCollectorProvider","unregister","addNetworkingHandler","socketId","addWebSocketHandler","removeWebSocketHandler","blob","sendOverSocket","registry","NativeModule","socketID","withId","_RCTDeviceEventEmitter","nativeModule","hasAddListener","hasRemoveListeners","removeListeners","_nativeModule","eventType","context","_this$_nativeModule","subscription","RCTDeviceEventEmitter","remove","_this$_nativeModule2","_this$_nativeModule3","_len","_key","apply","concat","_this$_nativeModule4","listenerCount","removeAllListeners","RCTNativeAppEventEmitter","_slicedToArray2","FormData","_parts","_ref","_ref2","name","headers","fieldName","string","_NativeEventEmitter2","_NativeNetworkingAndroid","_convertRequestBody","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","convertHeadersMapToArray","headerArray","_requestId","RCTNetworking","o","NativeNetworkingAndroid","_getPrototypeOf2","_possibleConstructorReturn2","constructor","_inherits2","method","trackingName","url","responseType","incrementalUpdates","timeout","withCredentials","body","convertRequestBody","formData","requestId","sendRequest","abortRequest","clearCookies","_toConsumableArray2","_get2","_callSuper","EventTarget","GlobalPerformanceLogger","base64","SUPPORTED_RESPONSE_TYPES","arraybuffer","document","json","REQUEST_EVENTS","XHR_EVENTS","XMLHttpRequestEventTarget","XMLHttpRequest","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","readyState","status","upload","_aborted","_hasError","_method","_perfKey","_response","_url","_timedOut","_trackingName","_incrementalEvents","_performanceLogger","_reset","responseHeaders","responseURL","_cachedResponse","_headers","_responseType","_sent","_lowerCaseResponseHeaders","_clearSubscriptions","toByteArray","buffer","JSON","parse","_","_interceptor","requestSent","progress","total","dispatchEvent","lengthComputable","loaded","stopTimespan","setResponseHeaders","setReadyState","responseReceived","response","dataReceived","responseText","__didReceiveDataProgress","error","timeOutError","loadingFailed","loadingFinished","_subscriptions","sub","unsortedHeaders","Map","_i","_Object$keys","keys","rawHeaderName","headerValue","lowerHeaderName","toLowerCase","header","upperHeaderName","toUpperCase","values","sort","b","join","performanceLogger","async","_this2","incrementalEvents","onreadystatechange","onprogress","__didUploadProgress","__didReceiveResponse","__didReceiveData","__didReceiveIncrementalData","__didCompleteResponse","nativeResponseType","doSend","friendlyName","startTimespan","__didCreateRequest","bind","lcaseHeaders","headerName","newState","p","interceptor","binaryToBase64","getParts","isView","_NativeDevSettings","DevSettings","addMenuItem","reload","reason","onFastRefresh","NativeDevSettings","subscriptions","event","reloadWithReason","createPerformanceLogger","Uint8Array","fromByteArray","byteOffset","byteLength","PerformanceLogger","Systrace","_cookies","getCurrentTimestamp","_global$nativeQPLTime","nativeQPLTimestamp","performance","_timespans","_extras","_points","_pointExtras","_closed","startTime","endTime","startExtras","endExtras","totalTime","getTimespans","getExtras","getPoints","getPointExtras","_this$_timespans$_key","timestamp","extras","beginAsyncEvent","timespan","endAsyncEvent","_console","log","err","stack","b64","lens","getLens","validLen","placeHoldersLen","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","code","indexOf","num","output","privateData","wrappers","pd","retv","assert","setCancelFlag","passiveListener","canceled","preventDefault","Event","eventTarget","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","getWrapper","proto","wrapper","BaseEvent","CustomEvent","writable","isFunc","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","next","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","types","addEventListener","optionsIsObj","capture","removeEventListener","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","superPropBase","_get","objectWithoutPropertiesLoose","getOwnPropertySymbols","s","includes","propertyIsEnumerable"],"sourceRoot":""}